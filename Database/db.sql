ALTER TABLE SYSTEM.T_ABILITY
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_ABILITY CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_ABILITY
(
  PK             INTEGER                        NOT NULL,
  ABILITY_NAME   VARCHAR2(40 BYTE)              NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6),
  IS_ACTIVE      CHAR(1 BYTE)                   DEFAULT 'Y'                   NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_ABILITY_LEVEL
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_ABILITY_LEVEL CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_ABILITY_LEVEL
(
  PK             INTEGER                        NOT NULL,
  LEVEL_NAME     VARCHAR2(40 BYTE)              NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6),
  IS_ACTIVE      CHAR(1 BYTE)                   DEFAULT 'Y'                   NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_EDUCATION
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_EDUCATION CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_EDUCATION
(
  PK                 NUMBER(2),
  EDUCATION_SUBJECT  VARCHAR2(100 BYTE)         NOT NULL,
  EDUCATION_CONTENT  VARCHAR2(1000 BYTE)        NOT NULL,
  IS_ACTIVE          CHAR(1 BYTE)               DEFAULT 'Y'                   NOT NULL,
  CREATION_TIME      TIMESTAMP(6)               DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME      TIMESTAMP(6),
  PLANNED_DATE       DATE                       NOT NULL,
  COMPLETE_DATE      DATE                       NOT NULL,
  EDUCATOR_FK        INTEGER                    NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_EDUCATION_ABILITY_REL CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_EDUCATION_ABILITY_REL
(
  PK             NUMBER(5),
  EDUCATION_FK   INTEGER                        NOT NULL,
  ABILITY_FK     INTEGER                        NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6)
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_EDUCATION_STATE_REL CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_EDUCATION_STATE_REL
(
  PK             INTEGER                        NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6)                   NOT NULL,
  EDUCATION_ID   INTEGER                        NOT NULL,
  STATE_ID       INTEGER                        NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_EDUCATION_USER_REL
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_EDUCATION_USER_REL CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_EDUCATION_USER_REL
(
  PK             NUMBER(7),
  EDUCATION_FK   INTEGER                        NOT NULL,
  USER_FK        INTEGER                        NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6)
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


DROP TABLE SYSTEM.T_EDUCATOR CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_EDUCATOR
(
  PK             INTEGER                        NOT NULL,
  EDUCATOR_NAME  VARCHAR2(60 BYTE)              NOT NULL,
  IS_INHOUSE     CHAR(1 BYTE)                   NOT NULL,
  IS_ACTIVE      CHAR(1 BYTE)                   DEFAULT 'Y'                   NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6)                   NOT NULL,
  USER_FK        VARCHAR2(20 BYTE)
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_STATE
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_STATE CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_STATE
(
  PK             INTEGER                        NOT NULL,
  STATE_NAME     VARCHAR2(40 BYTE)              NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6)                   NOT NULL,
  IS_ACTIVE      CHAR(1 BYTE)                   DEFAULT 'Y'                   NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX SYSTEM.SYS_C0014795 ON SYSTEM.T_ABILITY
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014796 ON SYSTEM.T_ABILITY
(ABILITY_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014797 ON SYSTEM.T_ABILITY_LEVEL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014798 ON SYSTEM.T_ABILITY_LEVEL
(LEVEL_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014801 ON SYSTEM.T_STATE
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014802 ON SYSTEM.T_STATE
(STATE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014811 ON SYSTEM.T_EDUCATION
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014812 ON SYSTEM.T_EDUCATION_ABILITY_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014813 ON SYSTEM.T_EDUCATION_STATE_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014814 ON SYSTEM.T_EDUCATION_USER_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.T_EDUCATOR_PK ON SYSTEM.T_EDUCATOR
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_LEVEL_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_ABILITY_LEVEL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_ABILITY_LEVEL_PK.nextval;
    END IF;                   
    IF :new.MODIFIED_TIME IS NULL THEN   
        :new.MODIFIED_TIME := :new.CREATION_TIME; 
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_LEVEL_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_ABILITY_LEVEL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.LEVEL_NAME != :old.LEVEL_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_ABILITY
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL  THEN
        :new.PK := SEQ_ABILITY_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
        
    END IF;    
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_ABILITY
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :old.ABILITY_NAME != :new.ABILITY_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_ABILITY_NEW_RCRD 
BEFORE INSERT
ON SYSTEM.T_EDUCATION_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_EDUCATION_ABILITY_REL_PK.nextval;  
    END IF;
              
    IF :new.MODIFIED_TIME IS NULL THEN 
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_ABILITY_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_EDUCATION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
    stt_id INTEGER;
BEGIN
    IF :new.PK IS NULL THEN 
        :new.PK := SEQ_EDUCATION_PK.nextval;
    END IF;            
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;    
    END IF;
    SELECT PK INTO stt_id FROM T_STATE WHERE STATE_NAME = 'PLANNED';
    INSERT INTO T_EDUCATION_STATE_REL(STATE_ID,EDUCATION_ID) VALUES(stt_id,:new.PK);
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_STATE_NEW_RECORD 
BEFORE INSERT ON SYSTEM.T_EDUCATION_STATE_REL
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.PK IS NULL THEN
        :new.PK := SEQ_EDUCATION_STATE_REL_PK.nextval;        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_STATE_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION_STATE_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.EDUCATION_SUBJECT != :old.EDUCATION_SUBJECT OR
            :new.EDUCATION_CONTENT != :old.EDUCATION_CONTENT OR
                :new.EDUCATOR_FK != :old.EDUCATOR_FK OR
                    :new.IS_ACTIVE != :old.IS_ACTIVE THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_USER_REL_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION_USER_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATOR_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_EDUCATOR
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_EDUCATOR_PK.nextval;
    END IF;                   
    IF :new.MODIFIED_TIME IS NULL THEN   
        :new.MODIFIED_TIME := :new.CREATION_TIME; 
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATOR_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATOR
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.EDUCATOR_NAME != :old.EDUCATOR_NAME OR
            :new.IS_INHOUSE != :old.IS_INHOUSE OR
                :new.IS_ACTIVE != :old.IS_ACTIVE OR 
                    :new.USER_FK != :old.USER_FK THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_STATE_NEW_RECORD 
BEFORE INSERT ON SYSTEM.T_STATE
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_STATE_PK.nextval;
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;    
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_STATE_UPDATE_RECORD 
BEFORE INSERT ON SYSTEM.T_STATE
FOR EACH ROW
DECLARE
BEGIN
    IF :old.STATE_NAME != :new.STATE_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF; 
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_EDUCATION_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_EDUCATION_USER_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.PK IS NULL THEN
        :new.PK := SEQ_USER_EDUCATION_REL_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


ALTER TABLE SYSTEM.T_DEPARTMENT
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_DEPARTMENT CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_DEPARTMENT
(
  PK               INTEGER                      NOT NULL,
  DEPARTMENT_NAME  VARCHAR2(40 BYTE)            NOT NULL,
  IS_ACTIVE        CHAR(1 BYTE)                 DEFAULT 'Y'                   NOT NULL,
  CREATION_TIME    TIMESTAMP(6)                 DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME    TIMESTAMP(6),
  MANAGER_ID       INTEGER
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_ROLE
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_ROLE CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_ROLE
(
  PK                          INTEGER           NOT NULL,
  ROLE_NAME                   VARCHAR2(60 BYTE) NOT NULL,
  IS_ACTIVE                   CHAR(1 BYTE)      DEFAULT 'Y'                   NOT NULL,
  UNIT_FK                     INTEGER,
  CREATION_TIME               TIMESTAMP(6)      DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME               TIMESTAMP(6),
  DEPARTMENT_FK               INTEGER,
  IS_UNIT_MANAGER_ROLE        CHAR(1 BYTE)      DEFAULT 'N'                   NOT NULL,
  IS_DEPARTMENT_MANAGER_ROLE  CHAR(1 BYTE)      DEFAULT 'N'                   NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_UNIT
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_UNIT CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_UNIT
(
  PK             INTEGER                        NOT NULL,
  UNIT_NAME      VARCHAR2(40 BYTE)              NOT NULL,
  IS_ACTIVE      CHAR(1 BYTE)                   DEFAULT 'Y'                   NOT NULL,
  DEPARTMENT_FK  INTEGER                        NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6),
  MANAGER_ID     INTEGER
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_USER
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_USER CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_USER
(
  PK             INTEGER                        NOT NULL,
  U_ID           VARCHAR2(20 BYTE)              NOT NULL,
  U_PW           VARCHAR2(40 BYTE)              NOT NULL,
  FIRST_NAME     VARCHAR2(40 BYTE)              NOT NULL,
  LAST_NAME      VARCHAR2(20 BYTE)              NOT NULL,
  DATE_OF_BIRTH  DATE                           NOT NULL,
  PHONE_NUMBER   VARCHAR2(11 BYTE)              NOT NULL,
  ADDRESS        VARCHAR2(255 BYTE)             NOT NULL,
  CREATION_TIME  TIMESTAMP(6)                   DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME  TIMESTAMP(6),
  IS_ACTIVE      CHAR(1 BYTE)                   DEFAULT 'Y'                   NOT NULL,
  ROLE_FK        INTEGER                        NOT NULL,
  EMAIL          VARCHAR2(254 BYTE)             NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


ALTER TABLE SYSTEM.T_USER_ABILITY_REL
 DROP PRIMARY KEY CASCADE;

DROP TABLE SYSTEM.T_USER_ABILITY_REL CASCADE CONSTRAINTS;

CREATE TABLE SYSTEM.T_USER_ABILITY_REL
(
  PK                NUMBER(9),
  ABILITY_FK        INTEGER                     NOT NULL,
  ABILITY_LEVEL_FK  INTEGER                     NOT NULL,
  CREATION_TIME     TIMESTAMP(6)                DEFAULT CURRENT_TIMESTAMP     NOT NULL,
  MODIFIED_TIME     TIMESTAMP(6),
  USER_FK           INTEGER                     NOT NULL
)
TABLESPACE SYSTEM
PCTUSED    40
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;


CREATE UNIQUE INDEX SYSTEM.SYS_C0014799 ON SYSTEM.T_DEPARTMENT
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014800 ON SYSTEM.T_DEPARTMENT
(DEPARTMENT_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014803 ON SYSTEM.T_UNIT
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014804 ON SYSTEM.T_UNIT
(UNIT_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014805 ON SYSTEM.T_ROLE
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014806 ON SYSTEM.T_ROLE
(ROLE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014807 ON SYSTEM.T_USER
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014808 ON SYSTEM.T_USER
(U_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014809 ON SYSTEM.T_USER
(PHONE_NUMBER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.SYS_C0014810 ON SYSTEM.T_USER_ABILITY_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX SYSTEM.T_USER_U03 ON SYSTEM.T_USER
(EMAIL)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_DEPARTMENT_UPDATE
BEFORE UPDATE
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    UPDATE T_ROLE SET ROLE_NAME = INITCAP(CONCAT(:new.DEPARTMENT_NAME,' Müdürü')) WHERE DEPARTMENT_FK = :new.PK AND IS_DEPARTMENT_MANAGER_ROLE = 'Y';
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_NEW_DEPARTMENT
AFTER INSERT
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN 
    INSERT INTO T_ROLE(ROLE_NAME,DEPARTMENT_FK,IS_DEPARTMENT_MANAGER_ROLE) VALUES(CONCAT(INITCAP(:new.DEPARTMENT_NAME),' Müdürü'),:new.PK,'Y');
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_NEW_UNIT
AFTER INSERT
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN   
    INSERT INTO T_ROLE(ROLE_NAME,UNIT_FK,DEPARTMENT_FK,IS_UNIT_MANAGER_ROLE) VALUES(CONCAT(INITCAP(:new.UNIT_NAME),' Yöneticisi'),:new.PK,:new.DEPARTMENT_FK,'Y');    
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_UNIT_UPDATE
BEFORE UPDATE
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    UPDATE T_ROLE SET ROLE_NAME = INITCAP(CONCAT(:new.UNIT_NAME,' Yöneticisi')) WHERE UNIT_FK = :new.PK AND IS_UNIT_MANAGER_ROLE = 'Y';
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_DEPARMENT_NEW_RECORD
BEFORE INSERT
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_DEPARTMENT_PK.nextval;
    END IF;    
        
    IF :new.MODIFIED_TIME IS NULL  THEN 
        :new.MODIFIED_TIME := :new.CREATION_TIME;        
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_DEPARTMENT_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :old.DEPARTMENT_NAME != :new.DEPARTMENT_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_ROLE_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_ROLE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_ROLE_PK.nextval;
    END IF;    
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;    
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_ROLE_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_ROLE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  
        (:new.ROLE_NAME != :old.ROLE_NAME OR
            :new.UNIT_FK != :old.UNIT_FK OR 
                :new.DEPARTMENT_FK != :old.DEPARTMENT_FK) THEN
                
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_UNIT_NEW_RECORD
BEFORE INSERT
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_UNIT_PK.nextval;        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;  
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_UNIT_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  
        (:old.UNIT_NAME != :new.UNIT_NAME OR 
            :old.DEPARTMENT_FK != :new.DEPARTMENT_FK) THEN
            
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
        
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_ABILITY_REL_NEW_RCRD 
BEFORE INSERT
ON SYSTEM.T_USER_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_USER_ABILITY_REL_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_ABILITY_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_USER_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.PK IS NULL THEN
        :new.PK := SEQ_USER_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  
            (:new.U_ID != :old.U_ID OR
                :new.U_PW != :old.U_PW OR
                    :new.EMAIL != :old.EMAIL OR
                        :new.FIRST_NAME != :old.FIRST_NAME OR
                            :new.LAST_NAME != :old.LAST_NAME OR
                                :new.DATE_OF_BIRTH != :old.DATE_OF_BIRTH OR
                                    :new.PHONE_NUMBER != :old.PHONE_NUMBER OR
                                        :new.ADDRESS != :old.ADDRESS OR 
                                            :new.IS_ACTIVE != :old.IS_ACTIVE OR
                                                :new.ROLE_FK != :old.ROLE_FK) THEN
                                                
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


ALTER TABLE SYSTEM.T_ABILITY ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE,
  UNIQUE (ABILITY_NAME)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_ABILITY_LEVEL ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE,
  UNIQUE (LEVEL_NAME)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_EDUCATION ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_STATE ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE,
  UNIQUE (STATE_NAME)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_DEPARTMENT ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE,
  UNIQUE (DEPARTMENT_NAME)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_ROLE ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE,
  UNIQUE (ROLE_NAME)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_UNIT ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE,
  UNIQUE (UNIT_NAME)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_USER ADD (
  CONSTRAINT T_USER_PK
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_USER_ABILITY_REL ADD (
  PRIMARY KEY
  (PK)
  USING INDEX
    TABLESPACE SYSTEM
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MAXSIZE          UNLIMITED
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
                FREELISTS        1
                FREELIST GROUPS  1
                BUFFER_POOL      DEFAULT
               )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_DEPARTMENT ADD (
  CONSTRAINT T_DEPARTMENT_R01 
  FOREIGN KEY (MANAGER_ID) 
  REFERENCES SYSTEM.T_USER (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_ROLE ADD (
  CONSTRAINT FK_ROLE_DEPARTMENT 
  FOREIGN KEY (DEPARTMENT_FK) 
  REFERENCES SYSTEM.T_DEPARTMENT (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE,
  FOREIGN KEY (UNIT_FK) 
  REFERENCES SYSTEM.T_UNIT (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_UNIT ADD (
  FOREIGN KEY (DEPARTMENT_FK) 
  REFERENCES SYSTEM.T_DEPARTMENT (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE,
  CONSTRAINT T_UNIT_R02 
  FOREIGN KEY (MANAGER_ID) 
  REFERENCES SYSTEM.T_USER (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_USER ADD (
  FOREIGN KEY (ROLE_FK) 
  REFERENCES SYSTEM.T_ROLE (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_USER_ABILITY_REL ADD (
  CONSTRAINT T_USER_ABILITY_REL_R01 
  FOREIGN KEY (ABILITY_FK) 
  REFERENCES SYSTEM.T_ABILITY (PK)
  ENABLE VALIDATE,
  CONSTRAINT T_USER_ABILITY_REL_R02 
  FOREIGN KEY (ABILITY_LEVEL_FK) 
  REFERENCES SYSTEM.T_ABILITY_LEVEL (PK)
  ENABLE VALIDATE,
  CONSTRAINT T_USER_ABILITY_REL_R03 
  FOREIGN KEY (USER_FK) 
  REFERENCES SYSTEM.T_USER (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);

--
-- Note: 
-- The following objects may not be sorted properly in the script due to cirular references
--
--  T_DEPARTMENT  (Table) 
--  T_ROLE  (Table) 
--  T_UNIT  (Table) 
--  T_USER  (Table) 
--  T_USER_ABILITY_REL  (Table) 
--  SYS_C0014799  (Index) 
--  SYS_C0014800  (Index) 
--  SYS_C0014803  (Index) 
--  SYS_C0014804  (Index) 
--  SYS_C0014805  (Index) 
--  SYS_C0014806  (Index) 
--  SYS_C0014807  (Index) 
--  SYS_C0014808  (Index) 
--  SYS_C0014809  (Index) 
--  SYS_C0014810  (Index) 
--  T_USER_U03  (Index) 
--  TRG_AFTER_DEPARTMENT_UPDATE  (Trigger) 
--  TRG_AFTER_NEW_DEPARTMENT  (Trigger) 
--  TRG_AFTER_NEW_UNIT  (Trigger) 
--  TRG_AFTER_UNIT_UPDATE  (Trigger) 
--  TRG_DEPARMENT_NEW_RECORD  (Trigger) 
--  TRG_DEPARTMENT_UPDATE  (Trigger) 
--  TRG_ROLE_NEW_RECORD  (Trigger) 
--  TRG_ROLE_UPDATE  (Trigger) 
--  TRG_UNIT_NEW_RECORD  (Trigger) 
--  TRG_UNIT_UPDATE  (Trigger) 
--  TRG_USER_ABILITY_REL_NEW_RCRD  (Trigger) 
--  TRG_USER_ABILITY_UPDATE  (Trigger) 
--  TRG_USER_NEW_RECORD  (Trigger) 
--  TRG_USER_UPDATE  (Trigger)
DROP TRIGGER SYSTEM.TRG_ABILITY_LEVEL_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_LEVEL_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_ABILITY_LEVEL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_ABILITY_LEVEL_PK.nextval;
    END IF;                   
    IF :new.MODIFIED_TIME IS NULL THEN   
        :new.MODIFIED_TIME := :new.CREATION_TIME; 
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_ABILITY_LEVEL_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_LEVEL_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_ABILITY_LEVEL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.LEVEL_NAME != :old.LEVEL_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_ABILITY_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_ABILITY
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL  THEN
        :new.PK := SEQ_ABILITY_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
        
    END IF;    
END;
/


DROP TRIGGER SYSTEM.TRG_ABILITY_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_ABILITY_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_ABILITY
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :old.ABILITY_NAME != :new.ABILITY_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_AFTER_DEPARTMENT_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_DEPARTMENT_UPDATE
BEFORE UPDATE
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    UPDATE T_ROLE SET ROLE_NAME = INITCAP(CONCAT(:new.DEPARTMENT_NAME,' Müdürü')) WHERE DEPARTMENT_FK = :new.PK AND IS_DEPARTMENT_MANAGER_ROLE = 'Y';
END;
/


DROP TRIGGER SYSTEM.TRG_AFTER_NEW_DEPARTMENT;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_NEW_DEPARTMENT
AFTER INSERT
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN 
    INSERT INTO T_ROLE(ROLE_NAME,DEPARTMENT_FK,IS_DEPARTMENT_MANAGER_ROLE) VALUES(CONCAT(INITCAP(:new.DEPARTMENT_NAME),' Müdürü'),:new.PK,'Y');
END;
/


DROP TRIGGER SYSTEM.TRG_AFTER_NEW_UNIT;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_NEW_UNIT
AFTER INSERT
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN   
    INSERT INTO T_ROLE(ROLE_NAME,UNIT_FK,DEPARTMENT_FK,IS_UNIT_MANAGER_ROLE) VALUES(CONCAT(INITCAP(:new.UNIT_NAME),' Yöneticisi'),:new.PK,:new.DEPARTMENT_FK,'Y');    
END;
/


DROP TRIGGER SYSTEM.TRG_AFTER_UNIT_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_AFTER_UNIT_UPDATE
BEFORE UPDATE
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    UPDATE T_ROLE SET ROLE_NAME = INITCAP(CONCAT(:new.UNIT_NAME,' Yöneticisi')) WHERE UNIT_FK = :new.PK AND IS_UNIT_MANAGER_ROLE = 'Y';
END;
/


DROP TRIGGER SYSTEM.TRG_DEPARMENT_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_DEPARMENT_NEW_RECORD
BEFORE INSERT
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_DEPARTMENT_PK.nextval;
    END IF;    
        
    IF :new.MODIFIED_TIME IS NULL  THEN 
        :new.MODIFIED_TIME := :new.CREATION_TIME;        
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_DEPARTMENT_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_DEPARTMENT_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_DEPARTMENT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :old.DEPARTMENT_NAME != :new.DEPARTMENT_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATION_ABILITY_NEW_RCRD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_ABILITY_NEW_RCRD 
BEFORE INSERT
ON SYSTEM.T_EDUCATION_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_EDUCATION_ABILITY_REL_PK.nextval;  
    END IF;
              
    IF :new.MODIFIED_TIME IS NULL THEN 
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATION_ABILITY_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_ABILITY_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATION_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_EDUCATION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
    stt_id INTEGER;
BEGIN
    IF :new.PK IS NULL THEN 
        :new.PK := SEQ_EDUCATION_PK.nextval;
    END IF;            
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;    
    END IF;
    SELECT PK INTO stt_id FROM T_STATE WHERE STATE_NAME = 'PLANNED';
    INSERT INTO T_EDUCATION_STATE_REL(STATE_ID,EDUCATION_ID) VALUES(stt_id,:new.PK);
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATION_STATE_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_STATE_NEW_RECORD 
BEFORE INSERT ON SYSTEM.T_EDUCATION_STATE_REL
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.PK IS NULL THEN
        :new.PK := SEQ_EDUCATION_STATE_REL_PK.nextval;        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATION_STATE_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_STATE_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION_STATE_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATION_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.EDUCATION_SUBJECT != :old.EDUCATION_SUBJECT OR
            :new.EDUCATION_CONTENT != :old.EDUCATION_CONTENT OR
                :new.EDUCATOR_FK != :old.EDUCATOR_FK OR
                    :new.IS_ACTIVE != :old.IS_ACTIVE THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATION_USER_REL_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATION_USER_REL_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATION_USER_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATOR_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATOR_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_EDUCATOR
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_EDUCATOR_PK.nextval;
    END IF;                   
    IF :new.MODIFIED_TIME IS NULL THEN   
        :new.MODIFIED_TIME := :new.CREATION_TIME; 
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_EDUCATOR_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_EDUCATOR_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_EDUCATOR
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.EDUCATOR_NAME != :old.EDUCATOR_NAME OR
            :new.IS_INHOUSE != :old.IS_INHOUSE OR
                :new.IS_ACTIVE != :old.IS_ACTIVE OR 
                    :new.USER_FK != :old.USER_FK THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_ROLE_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_ROLE_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_ROLE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_ROLE_PK.nextval;
    END IF;    
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;    
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_ROLE_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_ROLE_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_ROLE
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  
        (:new.ROLE_NAME != :old.ROLE_NAME OR
            :new.UNIT_FK != :old.UNIT_FK OR 
                :new.DEPARTMENT_FK != :old.DEPARTMENT_FK) THEN
                
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_STATE_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_STATE_NEW_RECORD 
BEFORE INSERT ON SYSTEM.T_STATE
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_STATE_PK.nextval;
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;    
END;
/


DROP TRIGGER SYSTEM.TRG_STATE_UPDATE_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_STATE_UPDATE_RECORD 
BEFORE INSERT ON SYSTEM.T_STATE
FOR EACH ROW
DECLARE
BEGIN
    IF :old.STATE_NAME != :new.STATE_NAME THEN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF; 
END;
/


DROP TRIGGER SYSTEM.TRG_UNIT_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_UNIT_NEW_RECORD
BEFORE INSERT
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_UNIT_PK.nextval;        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;  
END;
/


DROP TRIGGER SYSTEM.TRG_UNIT_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_UNIT_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_UNIT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  
        (:old.UNIT_NAME != :new.UNIT_NAME OR 
            :old.DEPARTMENT_FK != :new.DEPARTMENT_FK) THEN
            
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
        
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_USER_ABILITY_REL_NEW_RCRD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_ABILITY_REL_NEW_RCRD 
BEFORE INSERT
ON SYSTEM.T_USER_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF :new.PK IS NULL THEN
        :new.PK := SEQ_USER_ABILITY_REL_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_USER_ABILITY_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_ABILITY_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_USER_ABILITY_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
END;
/


DROP TRIGGER SYSTEM.TRG_USER_EDUCATION_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_EDUCATION_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_EDUCATION_USER_REL
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.PK IS NULL THEN
        :new.PK := SEQ_USER_EDUCATION_REL_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_USER_NEW_RECORD;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_NEW_RECORD 
BEFORE INSERT
ON SYSTEM.T_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  :new.PK IS NULL THEN
        :new.PK := SEQ_USER_PK.nextval;
        
    END IF;
    IF :new.MODIFIED_TIME IS NULL THEN
        :new.MODIFIED_TIME := :new.CREATION_TIME;
    END IF;
END;
/


DROP TRIGGER SYSTEM.TRG_USER_UPDATE;

CREATE OR REPLACE TRIGGER SYSTEM.TRG_USER_UPDATE 
BEFORE UPDATE
ON SYSTEM.T_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
BEGIN
    IF  
            (:new.U_ID != :old.U_ID OR
                :new.U_PW != :old.U_PW OR
                    :new.EMAIL != :old.EMAIL OR
                        :new.FIRST_NAME != :old.FIRST_NAME OR
                            :new.LAST_NAME != :old.LAST_NAME OR
                                :new.DATE_OF_BIRTH != :old.DATE_OF_BIRTH OR
                                    :new.PHONE_NUMBER != :old.PHONE_NUMBER OR
                                        :new.ADDRESS != :old.ADDRESS OR 
                                            :new.IS_ACTIVE != :old.IS_ACTIVE OR
                                                :new.ROLE_FK != :old.ROLE_FK) THEN
                                                
        :new.MODIFIED_TIME := CURRENT_TIMESTAMP;
    END IF;
END;
/
DROP PROCEDURE SYSTEM.SP_ASSIGN_ABILITIES_TO_EDU;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_ASSIGN_ABILITIES_TO_EDU" (edu_id IN INTEGER,ablty_ids IN INT_ARRAY,is_valid OUT CHAR)
AS
BEGIN
    FOR i IN 1..ablty_ids.count LOOP
        INSERT INTO T_EDUCATION_ABILITY_REL(EDUCATION_FK,ABILITY_FK) VALUES(edu_id,ablty_ids(i));  
    END LOOP;  
        
    is_valid := '1';      
END;
/


DROP PROCEDURE SYSTEM.SP_ASSIGN_ABILITIES_TO_USER;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_ASSIGN_ABILITIES_TO_USER" (usr_id IN INTEGER,ablty_ids IN INT_ARRAY,level_ids IN INT_ARRAY,is_valid OUT CHAR)
AS
BEGIN
    FOR i IN 1..ablty_ids.count LOOP
        INSERT INTO T_USER_ABILITY_REL(USER_FK,ABILITY_FK,ABILITY_LEVEL_FK) VALUES(usr_id,ablty_ids(i),level_ids(i));  
    END LOOP;
    
    is_valid := '1';  
END;
/


DROP PROCEDURE SYSTEM.SP_ASSIGN_USERS_TO_EDU;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_ASSIGN_USERS_TO_EDU" (edu_id IN INTEGER,usr_ids IN INT_ARRAY,is_valid OUT CHAR)
AS
BEGIN
    FOR i IN 1..usr_ids.count LOOP
        INSERT INTO T_EDUCATION_USER_REL(EDUCATION_FK,USER_FK) VALUES(edu_id,usr_ids(i));  
    END LOOP;  
    
    is_valid := '1';  
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_ABILITY;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_ABILITY" (ablty_name IN VARCHAR,is_valid OUT CHAR)
AS
    number_of_row INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_row FROM T_ABILITY WHERE ability_name = ablty_name;
    IF number_of_row = 0 THEN
        INSERT INTO T_ABILITY(ABILITY_NAME) VALUES(INITCAP(ablty_name));
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;        
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_ABILITY_LEVEL;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_ABILITY_LEVEL" (lvl_name IN VARCHAR,is_valid OUT CHAR)
AS
    number_of_row INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_row FROM T_ABILITY_LEVEL WHERE level_name = lvl_name;
    IF number_of_row = 0 THEN
        INSERT INTO T_ABILITY_LEVEL(LEVEL_NAME) VALUES(lvl_name);
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;     
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_DEPARTMENT;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_DEPARTMENT" (dep_name IN VARCHAR,is_valid OUT CHAR)
AS
    number_of_row INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_row FROM T_DEPARTMENT WHERE department_name = dep_name;
    IF number_of_row = 0 THEN
        INSERT INTO T_DEPARTMENT(DEPARTMENT_NAME) VALUES(INITCAP(dep_name));
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;        
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_EDUCATION;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_EDUCATION" (edu_subject IN VARCHAR,edu_content IN VARCHAR,
planned_dte IN VARCHAR,complete_dte IN VARCHAR,edctr_id IN INTEGER,is_valid OUT CHAR)
AS
BEGIN
    INSERT INTO T_EDUCATION(EDUCATION_SUBJECT,EDUCATION_CONTENT,PLANNED_DATE,COMPLETE_DATE,EDUCATOR_FK) 
        VALUES(edu_subject,edu_content,TO_DATE(planned_dte,'dd-mm-yyyy'),
            TO_DATE(complete_dte,'dd-mm-yyyy'),edctr_id);
          
    is_valid := '1';          
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_EDUCATOR;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_EDUCATOR" (edctr_name IN VARCHAR,is_inhuse IN CHAR,usr_id IN INTEGER,is_valid OUT CHAR)
AS
    number_of_row INTEGER;
    name_of_user VARCHAR(60);
BEGIN
    
    IF is_inhuse = '1' THEN
    
        SELECT COUNT(*) INTO number_of_row FROM T_EDUCATOR WHERE USER_FK = usr_id;
        
        IF number_of_row = 0 THEN
            
            SELECT CONCAT(CONCAT(FIRST_NAME,' '),LAST_NAME) INTO name_of_user FROM T_USER WHERE PK = usr_id;       
            INSERT INTO T_EDUCATOR(EDUCATOR_NAME,IS_INHOUSE,USER_FK) VALUES(INITCAP(name_of_user),is_inhuse,usr_id);            
            is_valid := '1';
        
        ELSE       
            is_valid := '0';            
        END IF;
        
    ELSE
        INSERT INTO T_EDUCATOR(EDUCATOR_NAME,IS_INHOUSE) VALUES(INITCAP(edctr_name),is_inhuse);        
        is_valid := '1';
    END IF;        
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_ROLE;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_ROLE" (r_name IN VARCHAR, unt_id IN INTEGER DEFAULT NULL, dep_id IN OUT INTEGER, is_valid OUT CHAR)
AS
    number_of_row INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_row FROM T_ROLE WHERE role_name = r_name;
    
    IF number_of_row = 0 THEN
        --SADECE BIRIM BILGISI ALINDI ISE
        IF dep_id IS NULL AND unt_id IS NOT NULL THEN
            SELECT DEPARTMENT_FK INTO dep_id FROM T_UNIT WHERE PK = unt_id;
            INSERT INTO T_ROLE(ROLE_NAME,UNIT_FK,DEPARTMENT_FK) VALUES(INITCAP(r_name),unt_id,dep_id);
            is_valid := '1';
        --SADECE DEPARTMAN BILGISI ALINDI ISE    
        ELSIF dep_id IS NOT NULL AND unt_id IS NULL THEN
            INSERT INTO T_ROLE(ROLE_NAME,UNIT_FK,DEPARTMENT_FK) VALUES(INITCAP(r_name),unt_id,dep_id);
            is_valid := '1';
        --DEPARTMAN VE BIRIM BILGILERI ALINMADI ISE    
        ELSIF dep_id IS NULL AND unt_id IS NULL THEN
            INSERT INTO T_ROLE(ROLE_NAME,UNIT_FK,DEPARTMENT_FK) VALUES(INITCAP(r_name),unt_id,dep_id);
            is_valid := '1';  
        ELSE 
            is_valid:= '0';
        END IF;     
    ELSE
        is_valid := '0';        
    END IF;
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_STATE;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_STATE" (stt_name IN VARCHAR,is_valid OUT CHAR)
AS
    number_of_row INTEGER;
BEGIN    
    SELECT COUNT(*) INTO number_of_row FROM T_STATE WHERE state_name = stt_name;
    IF number_of_row = 0 THEN
        INSERT INTO T_STATE(STATE_NAME) VALUES(stt_name);
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;  
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_UNIT;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_UNIT" (unt_name IN VARCHAR,dep_id IN INTEGER,is_valid OUT CHAR)
AS
    --dep_id INTEGER;
    number_of_row INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_row FROM T_UNIT WHERE unit_name = unt_name;
    IF number_of_row = 0 THEN
        --SELECT PK INTO dep_id FROM T_DEPARTMENT WHERE department_name = dep_name;
        INSERT INTO T_UNIT(UNIT_NAME,DEPARTMENT_FK) VALUES(INITCAP(unt_name),dep_id);
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;        
END;
/


DROP PROCEDURE SYSTEM.SP_CREATE_USER;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_CREATE_USER" (usr_id IN VARCHAR,usr_pw IN VARCHAR,e_mail IN VARCHAR,fname IN VARCHAR,lname IN VARCHAR,
    dte_of_birth IN VARCHAR,phne_num IN VARCHAR,addrss IN VARCHAR,rle_id IN INTEGER,is_valid OUT CHAR)
AS
    number_of_user INTEGER;
    number_of_email INTEGER;
    number_of_phone INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_user FROM T_USER WHERE U_ID = usr_id;
    SELECT COUNT(*) INTO number_of_email FROM T_USER WHERE EMAIL = e_mail;
    SELECT COUNT(*) INTO number_of_phone FROM T_USER WHERE PHONE_NUMBER = phne_num;
    
    IF number_of_user = 0 AND number_of_email = 0 AND number_of_phone = 0 THEN
        INSERT INTO T_USER(U_ID,U_PW,FIRST_NAME,LAST_NAME,DATE_OF_BIRTH,PHONE_NUMBER,ADDRESS,EMAIL,ROLE_FK) 
            VALUES(usr_id,usr_pw,fname,lname,TO_DATE(dte_of_birth,'dd-mm-yyyy'),phne_num,addrss,e_mail,rle_id); 
        
        is_valid := '1';  
          
    ELSE
        is_valid := '0';
        
    END IF;    
           
END;
/


DROP PROCEDURE SYSTEM.SP_REMOVE_ABILITY;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_REMOVE_ABILITY" (ablty_id IN INTEGER,is_valid OUT CHAR)
AS
    number_of_rows INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_rows FROM T_USER_ABILITY_REL WHERE ABILITY_FK = ablty_id;
    IF number_of_rows = 0 THEN
        DELETE FROM T_ABILITY WHERE PK = ablty_id;
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;
    
END;
/


DROP PROCEDURE SYSTEM.SP_REMOVE_DEPARTMENT;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_REMOVE_DEPARTMENT" (dep_id IN INTEGER,is_valid OUT CHAR)
AS
    number_of_role INTEGER;
    number_of_unit INTEGER;
    number_of_user INTEGER;
BEGIN
    --Altinda birim olup olmadiginin kontrolu
    SELECT COUNT(*) INTO number_of_unit FROM T_UNIT WHERE DEPARTMENT_FK = dep_id;
    
    --Altinda müdür rolünden farklı rolün olup olmadiginin kontrolü
    SELECT COUNT(*) INTO number_of_role FROM T_ROLE WHERE DEPARTMENT_FK = dep_id AND IS_DEPARTMENT_MANAGER_ROLE = 'N';
    
    --Altinda user olup olmadiginin kontrolü
    SELECT COUNT(*) INTO number_of_user FROM T_USER,T_ROLE WHERE T_USER.ROLE_FK = T_ROLE.PK AND T_ROLE.DEPARTMENT_FK =  dep_id;
    
    IF number_of_unit = 0 AND number_of_role = 0 AND number_of_user = 0 THEN
        DELETE FROM T_DEPARTMENT WHERE PK = dep_id;
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;
END;
/


DROP PROCEDURE SYSTEM.SP_REMOVE_EDUCATOR;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_REMOVE_EDUCATOR" (edctr_id IN INTEGER,is_valid OUT CHAR)
AS
BEGIN 
    DELETE FROM T_EDUCATOR WHERE PK = edctr_id;
    is_valid := '1';
END;
/


DROP PROCEDURE SYSTEM.SP_REMOVE_ROLE;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_REMOVE_ROLE" (rle_id IN INTEGER,is_valid OUT CHAR)
AS
    number_of_user INTEGER;
    is_manager_role INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_user FROM T_USER WHERE ROLE_FK = rle_id;
    SELECT COUNT(*) INTO is_manager_role FROM T_ROLE WHERE PK = rle_id AND (IS_DEPARTMENT_MANAGER_ROLE = 'Y' OR IS_UNIT_MANAGER_ROLE = 'Y');
    IF number_of_user = 0 AND is_manager_role = 0 THEN
        DELETE FROM T_ROLE WHERE PK = rle_id;
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;    
    
END;
/


DROP PROCEDURE SYSTEM.SP_REMOVE_UNIT;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_REMOVE_UNIT" (unt_id IN INTEGER,is_valid OUT CHAR)
AS
    number_of_role INTEGER;
    number_of_user INTEGER;
BEGIN
    --Altinda yönetici rolünün olup,olmadiginin kontrolü
    SELECT COUNT(*) INTO number_of_role FROM T_ROLE WHERE UNIT_FK = unt_id AND IS_UNIT_MANAGER_ROLE = 'N';
    
    --Altinda user olup olmadiginin kontrolü
    SELECT COUNT(*) INTO number_of_user FROM T_USER,T_ROLE WHERE T_USER.ROLE_FK = T_ROLE.PK AND T_ROLE.UNIT_FK = unt_id;
    
    IF number_of_role = 0 AND number_of_user=0 THEN
        DELETE FROM T_UNIT WHERE PK = unt_id;
        is_valid := '1';
    ELSE
        is_valid := '0';
    END IF;
END;
/


DROP PROCEDURE SYSTEM.SP_UPDATE_ABILITY;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_UPDATE_ABILITY" (ablty_id IN INTEGER,ablty_name IN VARCHAR,is_valid OUT CHAR)
AS
BEGIN
    UPDATE T_ABILITY SET ABILITY_NAME = INITCAP(ablty_name) WHERE PK = ablty_id;
    is_valid := '1';
END;
/


DROP PROCEDURE SYSTEM.SP_UPDATE_ABILITY_LEVEL;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_UPDATE_ABILITY_LEVEL" (lvl_id IN INTEGER,lvl_name IN VARCHAR,is_valid OUT CHAR)
AS
BEGIN
    UPDATE T_ABILITY_LEVEL SET LEVEL_NAME = lvl_name WHERE PK = lvl_id;
    is_valid := '1';
END;
/


DROP PROCEDURE SYSTEM.SP_UPDATE_DEPARTMENT;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_UPDATE_DEPARTMENT" (dep_id IN INTEGER,dep_name IN VARCHAR,is_valid OUT CHAR)
AS
BEGIN
    UPDATE T_DEPARTMENT SET DEPARTMENT_NAME = INITCAP(dep_name) WHERE PK = dep_id;
    is_valid := '1';
    commit;
END;
/


DROP PROCEDURE SYSTEM.SP_UPDATE_EDUCATOR;

CREATE OR REPLACE PROCEDURE SYSTEM.SP_UPDATE_EDUCATOR(edctr_id IN INTEGER,edctr_name IN VARCHAR,is_valid OUT CHAR)
AS
BEGIN
    UPDATE T_EDUCATOR SET EDUCATOR_NAME = INITCAP(edctr_name) WHERE PK = edctr_id;
END;
/


DROP PROCEDURE SYSTEM.SP_UPDATE_ROLE;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_UPDATE_ROLE" (rle_id IN INTEGER,rle_name IN VARCHAR,unt_id IN INTEGER,dep_id IN INTEGER,is_valid OUT CHAR)
AS
BEGIN
    UPDATE T_ROLE SET ROLE_NAME = INITCAP(rle_name),UNIT_FK = unt_id, DEPARTMENT_FK = dep_id WHERE PK = rle_id;
    is_valid := '1';
END;
/


DROP PROCEDURE SYSTEM.SP_UPDATE_UNIT;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_UPDATE_UNIT" (unt_id IN INTEGER,unt_name IN VARCHAR,dep_id IN INTEGER,is_valid OUT CHAR)
AS
BEGIN
    UPDATE T_UNIT SET UNIT_NAME = INITCAP(unt_name),DEPARTMENT_FK = dep_id WHERE PK = unt_id;
    is_valid := '1';
END;
/


DROP PROCEDURE SYSTEM.SP_UPDATE_USER;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_UPDATE_USER" (usr_id IN INTEGER,e_mail IN VARCHAR,fname IN VARCHAR,lname IN VARCHAR,
    dte_of_birth IN VARCHAR,phne_num IN VARCHAR,addrss IN VARCHAR,ablty_ids IN INT_ARRAY,level_ids IN INT_ARRAY,is_valid OUT CHAR)
AS
    number_of_email INTEGER;
    number_of_phone INTEGER;
BEGIN
    SELECT COUNT(*) INTO number_of_email FROM T_USER WHERE EMAIL = e_mail;
    SELECT COUNT(*) INTO number_of_phone FROM T_USER WHERE PHONE_NUMBER = phne_num;
    
    IF number_of_email = 0 AND number_of_phone = 0 THEN
        UPDATE T_USER SET EMAIL = e_mail, FIRST_NAME = fname, LAST_NAME = lname, 
            DATE_OF_BIRTH = TO_DATE(dte_of_birth,'mm-dd-yyyy'), PHONE_NUMBER = phne_num, ADDRESS = addrss WHERE U_ID = usr_id;
            
        DELETE FROM T_USER_ABILITY_REL WHERE USER_FK = usr_id;
        
        FOR i IN 1..ablty_ids.count LOOP
            INSERT INTO T_USER_ABILITY_REL(USER_FK,ABILITY_FK,ABILITY_LEVEL_FK) VALUES(usr_id,ablty_ids(i),level_ids(i));  
        END LOOP;
        
        is_valid := '1';      
    ELSE
        is_valid := '0';
    END IF;
END;
/


DROP PROCEDURE SYSTEM.SP_USER_LOGIN;

CREATE OR REPLACE PROCEDURE SYSTEM."SP_USER_LOGIN" (user_id IN VARCHAR,user_pw IN VARCHAR,is_valid OUT CHAR)
AS
    number_of_row NUMERIC ;
BEGIN
    SELECT COUNT(*) INTO number_of_row FROM T_USER WHERE u_id = user_id AND u_pw = user_pw;

    IF number_of_row = 1 THEN
        is_valid := '1';
    ELSE
        is_valid := '0';
        
    END IF;
END;
/
DROP SEQUENCE SYSTEM.SEQ_ABILITY_LEVEL_PK;

CREATE SEQUENCE SYSTEM.SEQ_ABILITY_LEVEL_PK
  START WITH 21
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_ABILITY_PK;

CREATE SEQUENCE SYSTEM.SEQ_ABILITY_PK
  START WITH 81
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_DEPARTMENT_PK;

CREATE SEQUENCE SYSTEM.SEQ_DEPARTMENT_PK
  START WITH 1800
  INCREMENT BY 5
  MAXVALUE 999999999999999999999999999
  MINVALUE 100
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_EDUCATION_ABILITY_REL_PK;

CREATE SEQUENCE SYSTEM.SEQ_EDUCATION_ABILITY_REL_PK
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_EDUCATION_PK;

CREATE SEQUENCE SYSTEM.SEQ_EDUCATION_PK
  START WITH 21
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_EDUCATION_STATE_REL_PK;

CREATE SEQUENCE SYSTEM.SEQ_EDUCATION_STATE_REL_PK
  START WITH 0
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_EDUCATOR_PK;

CREATE SEQUENCE SYSTEM.SEQ_EDUCATOR_PK
  START WITH 4
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_ROLE_PK;

CREATE SEQUENCE SYSTEM.SEQ_ROLE_PK
  START WITH 100000
  INCREMENT BY 500
  MAXVALUE 999999999999999999999999999
  MINVALUE 10000
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_STATE_PK;

CREATE SEQUENCE SYSTEM.SEQ_STATE_PK
  START WITH 3
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_UNIT_PK;

CREATE SEQUENCE SYSTEM.SEQ_UNIT_PK
  START WITH 10000
  INCREMENT BY 50
  MAXVALUE 999999999999999999999999999
  MINVALUE 1000
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_USER_ABILITY_REL_PK;

CREATE SEQUENCE SYSTEM.SEQ_USER_ABILITY_REL_PK
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_USER_EDUCATION_REL_PK;

CREATE SEQUENCE SYSTEM.SEQ_USER_EDUCATION_REL_PK
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;


DROP SEQUENCE SYSTEM.SEQ_USER_PK;

CREATE SEQUENCE SYSTEM.SEQ_USER_PK
  START WITH 5560
  INCREMENT BY 4
  MAXVALUE 999999999999999999999999999
  MINVALUE 5000
  NOCYCLE
  CACHE 20
  NOORDER
  NOKEEP
  GLOBAL;
DROP TYPE SYSTEM.INT_ARRAY;

CREATE OR REPLACE TYPE SYSTEM."INT_ARRAY" AS VARRAY(50) OF INTEGER;
/
ALTER TABLE SYSTEM.AQ$_INTERNET_AGENTS MODIFY 
  AGENT_NAME NULL;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENTS MODIFY 
  PROTOCOL NULL;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENTS
  DROP CONSTRAINT SYS_C002098;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENTS MODIFY 
  AGENT_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENTS MODIFY 
  PROTOCOL NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENTS ADD (
  PRIMARY KEY
  (AGENT_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS
  DROP CONSTRAINT AGENT_MUST_BE_CREATED;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS MODIFY 
  AGENT_NAME NULL;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS MODIFY 
  DB_USERNAME NULL;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS
  DROP CONSTRAINT UNQ_PAIRS;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS MODIFY 
  AGENT_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS MODIFY 
  DB_USERNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS ADD (
  CONSTRAINT UNQ_PAIRS
  UNIQUE (AGENT_NAME, DB_USERNAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  EVENTID NULL;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  TABLE_OBJNO NULL;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  USAGE NULL;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  ENABLE_FLAG NULL;

ALTER TABLE SYSTEM.AQ$_QUEUES
  DROP CONSTRAINT AQ$_QUEUES_PRIMARY;

ALTER TABLE SYSTEM.AQ$_QUEUES
  DROP CONSTRAINT AQ$_QUEUES_CHECK;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  EVENTID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  TABLE_OBJNO NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  USAGE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUES MODIFY 
  ENABLE_FLAG NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUES ADD (
  CONSTRAINT AQ$_QUEUES_PRIMARY
  PRIMARY KEY
  (OID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.AQ$_QUEUES ADD (
  CONSTRAINT AQ$_QUEUES_CHECK
  UNIQUE (NAME, TABLE_OBJNO)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  "SCHEMA" NULL;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  UDATA_TYPE NULL;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  OBJNO NULL;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  FLAGS NULL;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  SORT_COLS NULL;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES
  DROP CONSTRAINT AQ$_QUEUE_TABLES_PRIMARY;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  "SCHEMA" NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  UDATA_TYPE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  OBJNO NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES MODIFY 
  SORT_COLS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_QUEUE_TABLES ADD (
  CONSTRAINT AQ$_QUEUE_TABLES_PRIMARY
  PRIMARY KEY
  (OBJNO)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.AQ$_SCHEDULES MODIFY 
  DESTINATION NULL;

ALTER TABLE SYSTEM.AQ$_SCHEDULES
  DROP CONSTRAINT AQ$_SCHEDULES_PRIMARY;

ALTER TABLE SYSTEM.AQ$_SCHEDULES
  DROP CONSTRAINT AQ$_SCHEDULES_CHECK;

ALTER TABLE SYSTEM.AQ$_SCHEDULES MODIFY 
  DESTINATION NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.AQ$_SCHEDULES ADD (
  CONSTRAINT AQ$_SCHEDULES_PRIMARY
  PRIMARY KEY
  (OID, DESTINATION)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.AQ$_SCHEDULES ADD (
  CONSTRAINT AQ$_SCHEDULES_CHECK
  UNIQUE (JOBNO)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.CUSTOMERS MODIFY 
  ID NULL;

ALTER TABLE SYSTEM.CUSTOMERS MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.CUSTOMERS MODIFY 
  AGE NULL;

ALTER TABLE SYSTEM.CUSTOMERS
  DROP CONSTRAINT SYS_C0014536;

ALTER TABLE SYSTEM.CUSTOMERS MODIFY 
  ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.CUSTOMERS MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.CUSTOMERS MODIFY 
  AGE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.CUSTOMERS ADD (
  PRIMARY KEY
  (ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_DESTINATION MODIFY 
  LAST_DELIVERED NULL;

ALTER TABLE SYSTEM.DEF$_DESTINATION
  DROP CONSTRAINT DEF$_DESTINATION_PRIMARY;

ALTER TABLE SYSTEM.DEF$_DESTINATION MODIFY 
  LAST_DELIVERED NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.DEF$_DESTINATION ADD (
  CONSTRAINT DEF$_DESTINATION_PRIMARY
  PRIMARY KEY
  (DBLINK, CATCHUP)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_PROPAGATOR MODIFY 
  USERNAME NULL;

ALTER TABLE SYSTEM.DEF$_PROPAGATOR MODIFY 
  CREATED NULL;

ALTER TABLE SYSTEM.DEF$_PROPAGATOR
  DROP CONSTRAINT DEF$_PROPAGATOR_PRIMARY;

ALTER TABLE SYSTEM.DEF$_PROPAGATOR MODIFY 
  USERNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.DEF$_PROPAGATOR MODIFY 
  CREATED NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.DEF$_PROPAGATOR ADD (
  CONSTRAINT DEF$_PROPAGATOR_PRIMARY
  PRIMARY KEY
  (USERID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_PUSHED_TRANSACTIONS
  DROP CONSTRAINT SYS_C003760;

ALTER TABLE SYSTEM.DEF$_PUSHED_TRANSACTIONS
  DROP CONSTRAINT DEF$_PUSHED_TRAN_PRIMARY;

ALTER TABLE SYSTEM.DEF$_PUSHED_TRANSACTIONS ADD (
  CHECK (disabled IN ('T', 'F'))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.DEF$_PUSHED_TRANSACTIONS ADD (
  CONSTRAINT DEF$_PUSHED_TRAN_PRIMARY
  PRIMARY KEY
  (SOURCE_SITE_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.HELP MODIFY 
  TOPIC NULL;

ALTER TABLE SYSTEM.HELP MODIFY 
  SEQ NULL;

ALTER TABLE SYSTEM.HELP
  DROP CONSTRAINT HELP_TOPIC_SEQ;

ALTER TABLE SYSTEM.HELP MODIFY 
  TOPIC NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.HELP MODIFY 
  SEQ NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.HELP ADD (
  CONSTRAINT HELP_TOPIC_SEQ
  PRIMARY KEY
  (TOPIC, SEQ)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  CON# NULL;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  COMMIT_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG
  DROP CONSTRAINT LOGMNRC_CONCOL_GG_PK;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  CON# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  COMMIT_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CONCOL_GG ADD (
  CONSTRAINT LOGMNRC_CONCOL_GG_PK
  PRIMARY KEY
  (LOGMNR_UID, CON#, COMMIT_SCN, INTCOL#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  CON# NULL;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  COMMIT_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  BASEOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  BASEOBJV# NULL;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  FLAGS NULL;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG
  DROP CONSTRAINT LOGMNRC_CON_GG_PK;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  CON# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  COMMIT_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  BASEOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  BASEOBJV# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG MODIFY 
  FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_CON_GG ADD (
  CONSTRAINT LOGMNRC_CON_GG_PK
  PRIMARY KEY
  (LOGMNR_UID, CON#, COMMIT_SCN)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_DBNAME_UID_MAP MODIFY 
  GLOBAL_NAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_DBNAME_UID_MAP MODIFY 
  LOGMNR_MDH NULL;

ALTER TABLE SYSTEM.LOGMNRC_DBNAME_UID_MAP
  DROP CONSTRAINT LOGMNRC_DBNAME_UID_MAP_PK;

ALTER TABLE SYSTEM.LOGMNRC_DBNAME_UID_MAP MODIFY 
  GLOBAL_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_DBNAME_UID_MAP MODIFY 
  LOGMNR_MDH NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_DBNAME_UID_MAP ADD (
  CONSTRAINT LOGMNRC_DBNAME_UID_MAP_PK
  PRIMARY KEY
  (GLOBAL_NAME, LOGMNR_MDH)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_GSBA MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_GSBA MODIFY 
  AS_OF_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRC_GSBA
  DROP CONSTRAINT LOGMNRC_GSBA_PK;

ALTER TABLE SYSTEM.LOGMNRC_GSBA MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GSBA MODIFY 
  AS_OF_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GSBA ADD (
  CONSTRAINT LOGMNRC_GSBA_PK
  PRIMARY KEY
  (LOGMNR_UID, AS_OF_SCN)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  BO# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  INDTYPE# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GSII
  DROP CONSTRAINT LOGMNRC_GSII_PK;

ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  BO# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GSII MODIFY 
  INDTYPE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GSII ADD (
  CONSTRAINT LOGMNRC_GSII_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  OBJV# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  SEGCOL# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  COLNAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  TYPE# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTCS
  DROP CONSTRAINT LOGMNRC_GTCS_PK;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  OBJV# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  SEGCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  COLNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTCS MODIFY 
  TYPE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTCS ADD (
  CONSTRAINT LOGMNRC_GTCS_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, OBJV#, INTCOL#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  KEYOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LVLCNT NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  BASEOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  BASEOBJV# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LVL0TYPE# NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  OWNERNAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LVL0NAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  INTCOLS NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  START_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRC_GTLO
  DROP CONSTRAINT LOGMNRC_GTLO_PK;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  KEYOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LVLCNT NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  BASEOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  BASEOBJV# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LVL0TYPE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  OWNERNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  LVL0NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  INTCOLS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO MODIFY 
  START_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_GTLO ADD (
  CONSTRAINT LOGMNRC_GTLO_PK
  PRIMARY KEY
  (LOGMNR_UID, KEYOBJ#, BASEOBJV#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  COMMIT_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  POS# NULL;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG
  DROP CONSTRAINT LOGMNRC_INDCOL_GG_PK;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  COMMIT_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG MODIFY 
  POS# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_INDCOL_GG ADD (
  CONSTRAINT LOGMNRC_INDCOL_GG_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, COMMIT_SCN, INTCOL#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  COMMIT_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  BASEOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  BASEOBJV# NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  FLAGS NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  OWNER# NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  OWNERNAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG
  DROP CONSTRAINT LOGMNRC_IND_GG_PK;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  COMMIT_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  BASEOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  BASEOBJV# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  OWNER# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG MODIFY 
  OWNERNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_IND_GG ADD (
  CONSTRAINT LOGMNRC_IND_GG_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, COMMIT_SCN)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  COMMIT_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  SEQ_FLAGS NULL;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OWNER# NULL;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OWNERNAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OBJNAME NULL;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG
  DROP CONSTRAINT LOGMNRC_SEQ_GG_PK;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  COMMIT_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  SEQ_FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OWNER# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OWNERNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG MODIFY 
  OBJNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRC_SEQ_GG ADD (
  CONSTRAINT LOGMNRC_SEQ_GG_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, COMMIT_SCN)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  OBJV# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  SEGCOL# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  COLNAME NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  TYPE# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS
  DROP CONSTRAINT LOGMNRGGC_GTCS_PK;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  OBJV# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  SEGCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  COLNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS MODIFY 
  TYPE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTCS ADD (
  CONSTRAINT LOGMNRGGC_GTCS_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, OBJV#, INTCOL#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  KEYOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LVLCNT NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  BASEOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  BASEOBJV# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LVL0TYPE# NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  OWNERNAME NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LVL0NAME NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  INTCOLS NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  START_SCN NULL;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO
  DROP CONSTRAINT LOGMNRGGC_GTLO_PK;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  KEYOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LVLCNT NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  BASEOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  BASEOBJV# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LVL0TYPE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  OWNERNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  LVL0NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  INTCOLS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO MODIFY 
  START_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRGGC_GTLO ADD (
  CONSTRAINT LOGMNRGGC_GTLO_PK
  PRIMARY KEY
  (LOGMNR_UID, KEYOBJ#, BASEOBJV#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  LOGMNR_UID NULL;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  BASEOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  BASEOBJV# NULL;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  KEYOBJ# NULL;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  PART# NULL;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP
  DROP CONSTRAINT LOGMNRP_CTAS_PART_MAP_PK;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  LOGMNR_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  BASEOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  BASEOBJV# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  KEYOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP MODIFY 
  PART# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRP_CTAS_PART_MAP ADD (
  CONSTRAINT LOGMNRP_CTAS_PART_MAP_PK
  PRIMARY KEY
  (LOGMNR_UID, BASEOBJV#, KEYOBJ#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNRT_MDDL$ MODIFY 
  DEST_ROWID NULL;

ALTER TABLE SYSTEM.LOGMNRT_MDDL$
  DROP CONSTRAINT LOGMNRT_MDDL$_PK;

ALTER TABLE SYSTEM.LOGMNRT_MDDL$ MODIFY 
  DEST_ROWID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNRT_MDDL$ ADD (
  CONSTRAINT LOGMNRT_MDDL$_PK
  PRIMARY KEY
  (SOURCE_OBJ#, SOURCE_ROWID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_ATTRCOL$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_ATTRCOL$
  DROP CONSTRAINT LOGMNR_ATTRCOL$_PK;

ALTER TABLE SYSTEM.LOGMNR_ATTRCOL$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_ATTRCOL$ ADD (
  CONSTRAINT LOGMNR_ATTRCOL$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_ATTRIBUTE$ MODIFY 
  TOID NULL;

ALTER TABLE SYSTEM.LOGMNR_ATTRIBUTE$
  DROP CONSTRAINT LOGMNR_ATTRIBUTE$_PK;

ALTER TABLE SYSTEM.LOGMNR_ATTRIBUTE$ MODIFY 
  TOID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_ATTRIBUTE$ ADD (
  CONSTRAINT LOGMNR_ATTRIBUTE$_PK
  PRIMARY KEY
  (LOGMNR_UID, TOID, VERSION#, ATTRIBUTE#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_CCOL$ MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNR_CCOL$
  DROP CONSTRAINT LOGMNR_CCOL$_PK;

ALTER TABLE SYSTEM.LOGMNR_CCOL$ MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CCOL$ ADD (
  CONSTRAINT LOGMNR_CCOL$_PK
  PRIMARY KEY
  (LOGMNR_UID, CON#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_CDEF$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_CDEF$
  DROP CONSTRAINT LOGMNR_CDEF$_PK;

ALTER TABLE SYSTEM.LOGMNR_CDEF$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CDEF$ ADD (
  CONSTRAINT LOGMNR_CDEF$_PK
  PRIMARY KEY
  (LOGMNR_UID, CON#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_COL$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_COL$
  DROP CONSTRAINT LOGMNR_COL$_PK;

ALTER TABLE SYSTEM.LOGMNR_COL$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_COL$ ADD (
  CONSTRAINT LOGMNR_COL$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_COLTYPE$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_COLTYPE$
  DROP CONSTRAINT LOGMNR_COLTYPE$_PK;

ALTER TABLE SYSTEM.LOGMNR_COLTYPE$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_COLTYPE$ ADD (
  CONSTRAINT LOGMNR_COLTYPE$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_CON$ MODIFY 
  OWNER# NULL;

ALTER TABLE SYSTEM.LOGMNR_CON$ MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGMNR_CON$ MODIFY 
  CON# NULL;

ALTER TABLE SYSTEM.LOGMNR_CON$
  DROP CONSTRAINT LOGMNR_CON$_PK;

ALTER TABLE SYSTEM.LOGMNR_CON$ MODIFY 
  OWNER# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CON$ MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CON$ MODIFY 
  CON# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CON$ ADD (
  CONSTRAINT LOGMNR_CON$_PK
  PRIMARY KEY
  (LOGMNR_UID, CON#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CON_ID# NULL;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  DBID NULL;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CON_UID NULL;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CREATE_SCNWRP NULL;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CREATE_SCNBAS NULL;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  STATUS NULL;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$
  DROP CONSTRAINT LOGMNR_CONTAINER$_PK;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CON_ID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  DBID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CON_UID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CREATE_SCNWRP NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  CREATE_SCNBAS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ MODIFY 
  STATUS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_CONTAINER$ ADD (
  CONSTRAINT LOGMNR_CONTAINER$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_DICTIONARY$ MODIFY 
  DB_DICT_OBJECTCOUNT NULL;

ALTER TABLE SYSTEM.LOGMNR_DICTIONARY$
  DROP CONSTRAINT LOGMNR_DICTIONARY$_PK;

ALTER TABLE SYSTEM.LOGMNR_DICTIONARY$ MODIFY 
  DB_DICT_OBJECTCOUNT NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_DICTIONARY$ ADD (
  CONSTRAINT LOGMNR_DICTIONARY$_PK
  PRIMARY KEY
  (LOGMNR_UID)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_ENC$ MODIFY 
  MKEYID NULL;

ALTER TABLE SYSTEM.LOGMNR_ENC$
  DROP CONSTRAINT LOGMNR_ENC$_PK;

ALTER TABLE SYSTEM.LOGMNR_ENC$ MODIFY 
  MKEYID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_ENC$ ADD (
  CONSTRAINT LOGMNR_ENC$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, OWNER#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_ICOL$ MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNR_ICOL$
  DROP CONSTRAINT LOGMNR_ICOL$_PK;

ALTER TABLE SYSTEM.LOGMNR_ICOL$ MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_ICOL$ ADD (
  CONSTRAINT LOGMNR_ICOL$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_IND$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_IND$
  DROP CONSTRAINT LOGMNR_IND$_PK;

ALTER TABLE SYSTEM.LOGMNR_IND$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_IND$ ADD (
  CONSTRAINT LOGMNR_IND$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_INDCOMPART$ MODIFY 
  PART# NULL;

ALTER TABLE SYSTEM.LOGMNR_INDCOMPART$
  DROP CONSTRAINT LOGMNR_INDCOMPART$_PK;

ALTER TABLE SYSTEM.LOGMNR_INDCOMPART$ MODIFY 
  PART# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_INDCOMPART$ ADD (
  CONSTRAINT LOGMNR_INDCOMPART$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_INDPART$ MODIFY 
  TS# NULL;

ALTER TABLE SYSTEM.LOGMNR_INDPART$
  DROP CONSTRAINT LOGMNR_INDPART$_PK;

ALTER TABLE SYSTEM.LOGMNR_INDPART$ MODIFY 
  TS# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_INDPART$ ADD (
  CONSTRAINT LOGMNR_INDPART$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, BO#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_INDSUBPART$ MODIFY 
  TS# NULL;

ALTER TABLE SYSTEM.LOGMNR_INDSUBPART$
  DROP CONSTRAINT LOGMNR_INDSUBPART$_PK;

ALTER TABLE SYSTEM.LOGMNR_INDSUBPART$ MODIFY 
  TS# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_INDSUBPART$ ADD (
  CONSTRAINT LOGMNR_INDSUBPART$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, POBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_KOPM$ MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGMNR_KOPM$
  DROP CONSTRAINT LOGMNR_KOPM$_PK;

ALTER TABLE SYSTEM.LOGMNR_KOPM$ MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_KOPM$ ADD (
  CONSTRAINT LOGMNR_KOPM$_PK
  PRIMARY KEY
  (LOGMNR_UID, NAME)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_LOB$ MODIFY 
  CHUNK NULL;

ALTER TABLE SYSTEM.LOGMNR_LOB$
  DROP CONSTRAINT LOGMNR_LOB$_PK;

ALTER TABLE SYSTEM.LOGMNR_LOB$ MODIFY 
  CHUNK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_LOB$ ADD (
  CONSTRAINT LOGMNR_LOB$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_LOBFRAG$ MODIFY 
  FRAG# NULL;

ALTER TABLE SYSTEM.LOGMNR_LOBFRAG$
  DROP CONSTRAINT LOGMNR_LOBFRAG$_PK;

ALTER TABLE SYSTEM.LOGMNR_LOBFRAG$ MODIFY 
  FRAG# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_LOBFRAG$ ADD (
  CONSTRAINT LOGMNR_LOBFRAG$_PK
  PRIMARY KEY
  (LOGMNR_UID, FRAGOBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_LOGMNR_BUILDLOG MODIFY 
  INITIAL_XID NULL;

ALTER TABLE SYSTEM.LOGMNR_LOGMNR_BUILDLOG
  DROP CONSTRAINT LOGMNR_LOGMNR_BUILDLOG_PK;

ALTER TABLE SYSTEM.LOGMNR_LOGMNR_BUILDLOG MODIFY 
  INITIAL_XID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_LOGMNR_BUILDLOG ADD (
  CONSTRAINT LOGMNR_LOGMNR_BUILDLOG_PK
  PRIMARY KEY
  (LOGMNR_UID, INITIAL_XID)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_NTAB$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_NTAB$
  DROP CONSTRAINT LOGMNR_NTAB$_PK;

ALTER TABLE SYSTEM.LOGMNR_NTAB$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_NTAB$ ADD (
  CONSTRAINT LOGMNR_NTAB$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_OBJ$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_OBJ$
  DROP CONSTRAINT LOGMNR_OBJ$_PK;

ALTER TABLE SYSTEM.LOGMNR_OBJ$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_OBJ$ ADD (
  CONSTRAINT LOGMNR_OBJ$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_OPQTYPE$ MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNR_OPQTYPE$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_OPQTYPE$
  DROP CONSTRAINT LOGMNR_OPQTYPE$_PK;

ALTER TABLE SYSTEM.LOGMNR_OPQTYPE$ MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_OPQTYPE$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_OPQTYPE$ ADD (
  CONSTRAINT LOGMNR_OPQTYPE$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_PARAMETER$ MODIFY 
  SESSION# NULL;

ALTER TABLE SYSTEM.LOGMNR_PARAMETER$ MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGMNR_PARAMETER$ MODIFY 
  SESSION# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_PARAMETER$ MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.LOGMNR_PARTOBJ$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_PARTOBJ$
  DROP CONSTRAINT LOGMNR_PARTOBJ$_PK;

ALTER TABLE SYSTEM.LOGMNR_PARTOBJ$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_PARTOBJ$ ADD (
  CONSTRAINT LOGMNR_PARTOBJ$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$ MODIFY 
  LOGMNR_DID NULL;

ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$ MODIFY 
  LOGMNR_MDH NULL;

ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$ MODIFY 
  PLUGIN_SCN NULL;

ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$
  DROP CONSTRAINT LOGMNR_PDB_INFO$_PK;

ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$ MODIFY 
  LOGMNR_DID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$ MODIFY 
  LOGMNR_MDH NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$ MODIFY 
  PLUGIN_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_PDB_INFO$ ADD (
  CONSTRAINT LOGMNR_PDB_INFO$_PK
  PRIMARY KEY
  (LOGMNR_DID, LOGMNR_MDH, PLUGIN_SCN)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_PROPS$ MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGMNR_PROPS$
  DROP CONSTRAINT LOGMNR_PROPS$_PK;

ALTER TABLE SYSTEM.LOGMNR_PROPS$ MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_PROPS$ ADD (
  CONSTRAINT LOGMNR_PROPS$_PK
  PRIMARY KEY
  (LOGMNR_UID, NAME)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_REFCON$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_REFCON$
  DROP CONSTRAINT LOGMNR_REFCON$_PK;

ALTER TABLE SYSTEM.LOGMNR_REFCON$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_REFCON$ ADD (
  CONSTRAINT LOGMNR_REFCON$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_SEED$ MODIFY 
  NULL$ NULL;

ALTER TABLE SYSTEM.LOGMNR_SEED$
  DROP CONSTRAINT LOGMNR_SEED$_PK;

ALTER TABLE SYSTEM.LOGMNR_SEED$ MODIFY 
  NULL$ NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SEED$ ADD (
  CONSTRAINT LOGMNR_SEED$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_SESSION$ MODIFY 
  SESSION_NAME NULL;

ALTER TABLE SYSTEM.LOGMNR_SESSION$
  DROP CONSTRAINT LOGMNR_SESSION_PK;

ALTER TABLE SYSTEM.LOGMNR_SESSION$
  DROP CONSTRAINT LOGMNR_SESSION_UK1;

ALTER TABLE SYSTEM.LOGMNR_SESSION$ MODIFY 
  SESSION_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SESSION$ ADD (
  CONSTRAINT LOGMNR_SESSION_PK
  PRIMARY KEY
  (SESSION#)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.LOGMNR_SESSION$ ADD (
  CONSTRAINT LOGMNR_SESSION_UK1
  UNIQUE (SESSION_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  ACTIONNAME NULL;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  LOGMNRSESSION# NULL;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  PROCESSROLE# NULL;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  ACTIONTYPE# NULL;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$
  DROP CONSTRAINT LOGMNR_SESSION_ACTION$_PK;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  ACTIONNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  LOGMNRSESSION# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  PROCESSROLE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ MODIFY 
  ACTIONTYPE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SESSION_ACTIONS$ ADD (
  CONSTRAINT LOGMNR_SESSION_ACTION$_PK
  PRIMARY KEY
  (LOGMNRSESSION#, ACTIONNAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  INTCOL# NULL;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  TOID NULL;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  VERSION# NULL;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$
  DROP CONSTRAINT LOGMNR_SUBCOLTYPE$_PK;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  INTCOL# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  TOID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  VERSION# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_SUBCOLTYPE$ ADD (
  CONSTRAINT LOGMNR_SUBCOLTYPE$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, INTCOL#, TOID)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_TAB$ MODIFY 
  OBJ# NULL;

ALTER TABLE SYSTEM.LOGMNR_TAB$
  DROP CONSTRAINT LOGMNR_TAB$_PK;

ALTER TABLE SYSTEM.LOGMNR_TAB$ MODIFY 
  OBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_TAB$ ADD (
  CONSTRAINT LOGMNR_TAB$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_TABCOMPART$ MODIFY 
  PART# NULL;

ALTER TABLE SYSTEM.LOGMNR_TABCOMPART$
  DROP CONSTRAINT LOGMNR_TABCOMPART$_PK;

ALTER TABLE SYSTEM.LOGMNR_TABCOMPART$ MODIFY 
  PART# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_TABCOMPART$ ADD (
  CONSTRAINT LOGMNR_TABCOMPART$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_TABPART$ MODIFY 
  BO# NULL;

ALTER TABLE SYSTEM.LOGMNR_TABPART$
  DROP CONSTRAINT LOGMNR_TABPART$_PK;

ALTER TABLE SYSTEM.LOGMNR_TABPART$ MODIFY 
  BO# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_TABPART$ ADD (
  CONSTRAINT LOGMNR_TABPART$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, BO#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_TABSUBPART$ MODIFY 
  TS# NULL;

ALTER TABLE SYSTEM.LOGMNR_TABSUBPART$
  DROP CONSTRAINT LOGMNR_TABSUBPART$_PK;

ALTER TABLE SYSTEM.LOGMNR_TABSUBPART$ MODIFY 
  TS# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_TABSUBPART$ ADD (
  CONSTRAINT LOGMNR_TABSUBPART$_PK
  PRIMARY KEY
  (LOGMNR_UID, OBJ#, POBJ#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_TS$ MODIFY 
  BLOCKSIZE NULL;

ALTER TABLE SYSTEM.LOGMNR_TS$
  DROP CONSTRAINT LOGMNR_TS$_PK;

ALTER TABLE SYSTEM.LOGMNR_TS$ MODIFY 
  BLOCKSIZE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_TS$ ADD (
  CONSTRAINT LOGMNR_TS$_PK
  PRIMARY KEY
  (LOGMNR_UID, TS#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_TYPE$ MODIFY 
  TOID NULL;

ALTER TABLE SYSTEM.LOGMNR_TYPE$
  DROP CONSTRAINT LOGMNR_TYPE$_PK;

ALTER TABLE SYSTEM.LOGMNR_TYPE$ MODIFY 
  TOID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_TYPE$ ADD (
  CONSTRAINT LOGMNR_TYPE$_PK
  PRIMARY KEY
  (LOGMNR_UID, TOID, VERSION#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_USER$ MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGMNR_USER$
  DROP CONSTRAINT LOGMNR_USER$_PK;

ALTER TABLE SYSTEM.LOGMNR_USER$ MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGMNR_USER$ ADD (
  CONSTRAINT LOGMNR_USER$_PK
  PRIMARY KEY
  (LOGMNR_UID, USER#)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  SESSION_ID NULL;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  COMMIT_SCN NULL;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  SYNCH_SCN NULL;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  EPOCH NULL;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  PROCESSED_SCN NULL;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  FETCHLWM_SCN NULL;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  SESSION_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  COMMIT_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  SYNCH_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  EPOCH NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  PROCESSED_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGSTDBY$APPLY_MILESTONE MODIFY 
  FETCHLWM_SCN NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.LOGSTDBY$FLASHBACK_SCN MODIFY 
  PRIMARY_SCN NULL;

ALTER TABLE SYSTEM.LOGSTDBY$FLASHBACK_SCN
  DROP CONSTRAINT SYS_C004384;

ALTER TABLE SYSTEM.LOGSTDBY$FLASHBACK_SCN MODIFY 
  PRIMARY_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGSTDBY$FLASHBACK_SCN ADD (
  PRIMARY KEY
  (PRIMARY_SCN)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGSTDBY$SKIP_SUPPORT MODIFY 
  ACTION NULL;

ALTER TABLE SYSTEM.LOGSTDBY$SKIP_SUPPORT MODIFY 
  NAME NULL;

ALTER TABLE SYSTEM.LOGSTDBY$SKIP_SUPPORT MODIFY 
  ACTION NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.LOGSTDBY$SKIP_SUPPORT MODIFY 
  NAME NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  AJGID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  AJGDESLEN NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  AJGDES NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  HASHVALUE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG
  DROP CONSTRAINT MVIEW$_ADV_AJG_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  AJGID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  AJGDESLEN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  AJGDES NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG MODIFY 
  HASHVALUE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_AJG ADD (
  CONSTRAINT MVIEW$_ADV_AJG_PK
  PRIMARY KEY
  (AJGID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_BASETABLE
  DROP CONSTRAINT MVIEW$_ADV_BASETABLE_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_BASETABLE MODIFY 
  COLLECTIONID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_BASETABLE MODIFY 
  QUERYID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_BASETABLE MODIFY 
  COLLECTIONID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_BASETABLE MODIFY 
  QUERYID# NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE
  DROP CONSTRAINT MVIEW$_ADV_CLIQUE_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  CLIQUEID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  CLIQUEDESLEN NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  CLIQUEDES NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  HASHVALUE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  FREQUENCY NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  BYTECOST NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  ROWSIZE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  NUMROWS NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE
  DROP CONSTRAINT MVIEW$_ADV_CLIQUE_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  CLIQUEID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  CLIQUEDESLEN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  CLIQUEDES NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  HASHVALUE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  FREQUENCY NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  BYTECOST NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  ROWSIZE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE MODIFY 
  NUMROWS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE ADD (
  CONSTRAINT MVIEW$_ADV_CLIQUE_PK
  PRIMARY KEY
  (CLIQUEID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE
  DROP CONSTRAINT MVIEW$_ADV_ELIGIBLE_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  SUMOBJN# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  BYTECOST NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  FLAGS NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  FREQUENCY NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE
  DROP CONSTRAINT MVIEW$_ADV_ELIGIBLE_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  SUMOBJN# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  BYTECOST NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE MODIFY 
  FREQUENCY NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE ADD (
  CONSTRAINT MVIEW$_ADV_ELIGIBLE_PK
  PRIMARY KEY
  (SUMOBJN#, RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER MODIFY 
  FILTERID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER MODIFY 
  SUBFILTERNUM# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER MODIFY 
  SUBFILTERTYPE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER
  DROP CONSTRAINT MVIEW$_ADV_FILTER_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER MODIFY 
  FILTERID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER MODIFY 
  SUBFILTERNUM# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER MODIFY 
  SUBFILTERTYPE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTER ADD (
  CONSTRAINT MVIEW$_ADV_FILTER_PK
  PRIMARY KEY
  (FILTERID#, SUBFILTERNUM#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_FILTERINSTANCE
  DROP CONSTRAINT MVIEW$_ADV_FILTERINSTANCE_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTERINSTANCE MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FILTERINSTANCE MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.MVIEW$_ADV_FJG
  DROP CONSTRAINT MVIEW$_ADV_FJG_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  FJGID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  AJGID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  FJGDESLEN NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  FJGDES NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  HASHVALUE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG
  DROP CONSTRAINT MVIEW$_ADV_FJG_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  FJGID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  AJGID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  FJGDESLEN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  FJGDES NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG MODIFY 
  HASHVALUE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_FJG ADD (
  CONSTRAINT MVIEW$_ADV_FJG_PK
  PRIMARY KEY
  (FJGID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_GC
  DROP CONSTRAINT MVIEW$_ADV_GC_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  GCID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  FJGID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  GCDESLEN NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  GCDES NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  HASHVALUE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC
  DROP CONSTRAINT MVIEW$_ADV_GC_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  GCID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  FJGID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  GCDESLEN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  GCDES NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC MODIFY 
  HASHVALUE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_GC ADD (
  CONSTRAINT MVIEW$_ADV_GC_PK
  PRIMARY KEY
  (GCID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_INFO
  DROP CONSTRAINT MVIEW$_ADV_INFO_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  SEQ# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  TYPE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  INFOLEN NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO
  DROP CONSTRAINT MVIEW$_ADV_INFO_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  SEQ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  TYPE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO MODIFY 
  INFOLEN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_INFO ADD (
  CONSTRAINT MVIEW$_ADV_INFO_PK
  PRIMARY KEY
  (RUNID#, SEQ#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL
  DROP CONSTRAINT MVIEW$_ADV_JOURNAL_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  SEQ# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  TIMESTAMP NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  FLAGS NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL
  DROP CONSTRAINT MVIEW$_ADV_JOURNAL_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  SEQ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  TIMESTAMP NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL MODIFY 
  FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL ADD (
  CONSTRAINT MVIEW$_ADV_JOURNAL_PK
  PRIMARY KEY
  (RUNID#, SEQ#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL
  DROP CONSTRAINT MVIEW$_ADV_LEVEL_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  LEVELID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  FLAGS NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  TBLOBJ# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  COLUMNLIST NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL
  DROP CONSTRAINT MVIEW$_ADV_LEVEL_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  LEVELID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  TBLOBJ# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL MODIFY 
  COLUMNLIST NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL ADD (
  CONSTRAINT MVIEW$_ADV_LEVEL_PK
  PRIMARY KEY
  (RUNID#, LEVELID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_LOG MODIFY 
  STATUS NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_LOG
  DROP CONSTRAINT MVIEW$_ADV_LOG_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_LOG MODIFY 
  STATUS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_LOG ADD (
  CONSTRAINT MVIEW$_ADV_LOG_PK
  PRIMARY KEY
  (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT
  DROP CONSTRAINT MVIEW$_ADV_OUTPUT_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT MODIFY 
  OUTPUT_TYPE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT MODIFY 
  BENEFIT_TO_COST_RATIO NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT
  DROP CONSTRAINT MVIEW$_ADV_OUTPUT_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT MODIFY 
  OUTPUT_TYPE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT MODIFY 
  BENEFIT_TO_COST_RATIO NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT ADD (
  CONSTRAINT MVIEW$_ADV_OUTPUT_PK
  PRIMARY KEY
  (RUNID#, RANK#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_PARAMETERS MODIFY 
  PARAMETER_TYPE NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_PARAMETERS
  DROP CONSTRAINT MVIEW$_ADV_PARAMETERS_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_PARAMETERS MODIFY 
  PARAMETER_TYPE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_PARAMETERS ADD (
  CONSTRAINT MVIEW$_ADV_PARAMETERS_PK
  PRIMARY KEY
  (PARAMETER_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP
  DROP CONSTRAINT MVIEW$_ADV_ROLLUP_CFK;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP
  DROP CONSTRAINT MVIEW$_ADV_ROLLUP_FK;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP
  DROP CONSTRAINT MVIEW$_ADV_ROLLUP_PFK;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  RUNID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  CLEVELID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  PLEVELID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  FLAGS NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP
  DROP CONSTRAINT MVIEW$_ADV_ROLLUP_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  RUNID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  CLEVELID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  PLEVELID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP MODIFY 
  FLAGS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP ADD (
  CONSTRAINT MVIEW$_ADV_ROLLUP_PK
  PRIMARY KEY
  (RUNID#, CLEVELID#, PLEVELID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  QUERYID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  COLLECTIONID# NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  COLLECTTIME NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  UNAME NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  SQL_TEXT NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  SQL_TEXTLEN NULL;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD
  DROP CONSTRAINT MVIEW$_ADV_WORKLOAD_PK;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  QUERYID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  COLLECTIONID# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  COLLECTTIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  UNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  SQL_TEXT NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD MODIFY 
  SQL_TEXTLEN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.MVIEW$_ADV_WORKLOAD ADD (
  CONSTRAINT MVIEW$_ADV_WORKLOAD_PK
  PRIMARY KEY
  (QUERYID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REDO_DB MODIFY 
  DBID NULL;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  THREAD# NULL;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  RESETLOGS_TIME NULL;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  PRESETLOGS_TIME NULL;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  RESETLOGS_SCN NULL;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  PRESETLOGS_SCN NULL;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  DBID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  THREAD# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  RESETLOGS_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  PRESETLOGS_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  RESETLOGS_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_DB MODIFY 
  PRESETLOGS_SCN NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  DBID NULL;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  THREAD# NULL;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  RESETLOGS_TIME NULL;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  PRESETLOGS_TIME NULL;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  SEQUENCE# NULL;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  RESETLOGS_SCN NULL;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  PRESETLOGS_SCN NULL;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  DBID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  THREAD# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  RESETLOGS_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  PRESETLOGS_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  SEQUENCE# NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  RESETLOGS_SCN NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_LOG MODIFY 
  PRESETLOGS_SCN NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.REDO_RTA MODIFY 
  DBID NULL;

ALTER TABLE SYSTEM.REDO_RTA MODIFY 
  THREAD NULL;

ALTER TABLE SYSTEM.REDO_RTA MODIFY 
  DBID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REDO_RTA MODIFY 
  THREAD NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE
  DROP CONSTRAINT REPCAT$_AUDIT_ATTRIBUTE_C1;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE MODIFY 
  DATA_TYPE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE MODIFY 
  SOURCE NULL;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE
  DROP CONSTRAINT REPCAT$_AUDIT_ATTRIBUTE_PK;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE ADD (
  CONSTRAINT REPCAT$_AUDIT_ATTRIBUTE_C1
  CHECK ((data_type_id in (2, 4, 5, 6, 7) and
                  data_length is not null)
              or (data_type_id not in (2, 4, 5, 6, 7) and
                  data_length is null)
                 )
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE MODIFY 
  DATA_TYPE_ID CONSTRAINT REPCAT$_AUDIT_ATTRIBUTE_NN1 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE MODIFY 
  SOURCE CONSTRAINT REPCAT$_AUDIT_ATTRIBUTE_NN2 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_ATTRIBUTE ADD (
  CONSTRAINT REPCAT$_AUDIT_ATTRIBUTE_PK
  PRIMARY KEY
  (ATTRIBUTE)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN
  DROP CONSTRAINT REPCAT$_AUDIT_COLUMN_F1;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN
  DROP CONSTRAINT REPCAT$_AUDIT_COLUMN_F2;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_SNAME NULL;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_ONAME NULL;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_CONFLICT_TYPE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_REFERENCE_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  ATTRIBUTE NULL;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN
  DROP CONSTRAINT REPCAT$_AUDIT_COLUMN_PK;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_SNAME CONSTRAINT REPCAT$_AUDIT_COLUMN_NN1 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_ONAME CONSTRAINT REPCAT$_AUDIT_COLUMN_NN2 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_CONFLICT_TYPE_ID CONSTRAINT REPCAT$_AUDIT_COLUMN_NN3 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  BASE_REFERENCE_NAME CONSTRAINT REPCAT$_AUDIT_COLUMN_NN4 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN MODIFY 
  ATTRIBUTE CONSTRAINT REPCAT$_AUDIT_COLUMN_NN5 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN ADD (
  CONSTRAINT REPCAT$_AUDIT_COLUMN_PK
  PRIMARY KEY
  (COLUMN_NAME, ONAME, SNAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP MODIFY 
  SNAME NULL;

ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP MODIFY 
  ONAME NULL;

ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP MODIFY 
  GROUP_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP
  DROP CONSTRAINT REPCAT$_COLUMN_GROUP_PK;

ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP MODIFY 
  SNAME CONSTRAINT REPCAT$_COLUMN_GROUP_NN1 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP MODIFY 
  ONAME CONSTRAINT REPCAT$_COLUMN_GROUP_NN2 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP MODIFY 
  GROUP_NAME CONSTRAINT REPCAT$_COLUMN_GROUP_NN3 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_COLUMN_GROUP ADD (
  CONSTRAINT REPCAT$_COLUMN_GROUP_PK
  PRIMARY KEY
  (SNAME, ONAME, GROUP_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_CONFLICT
  DROP CONSTRAINT REPCAT$_CONFLICT_C1;

ALTER TABLE SYSTEM.REPCAT$_CONFLICT
  DROP CONSTRAINT REPCAT$_CONFLICT_PK;

ALTER TABLE SYSTEM.REPCAT$_CONFLICT ADD (
  CONSTRAINT REPCAT$_CONFLICT_C1
  CHECK (conflict_type_id in (1, 2, 3))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_CONFLICT ADD (
  CONSTRAINT REPCAT$_CONFLICT_PK
  PRIMARY KEY
  (SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_EXTENSION
  DROP CONSTRAINT REPCAT$_EXTENSION_CODE;

ALTER TABLE SYSTEM.REPCAT$_EXTENSION
  DROP CONSTRAINT REPCAT$_EXTENSION_EXPORTREQ;

ALTER TABLE SYSTEM.REPCAT$_EXTENSION
  DROP CONSTRAINT REPCAT$_EXTENSION_PUSH_TO_MDEF;

ALTER TABLE SYSTEM.REPCAT$_EXTENSION
  DROP CONSTRAINT REPCAT$_EXTENSION_PUSH_TO_NEW;

ALTER TABLE SYSTEM.REPCAT$_EXTENSION
  DROP CONSTRAINT REPCAT$_EXTENSION_STATUS;

ALTER TABLE SYSTEM.REPCAT$_EXTENSION
  DROP CONSTRAINT SYS_C003934;

ALTER TABLE SYSTEM.REPCAT$_EXTENSION ADD (
  CONSTRAINT REPCAT$_EXTENSION_CODE
  CHECK (extension_code IN (0))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_EXTENSION ADD (
  CONSTRAINT REPCAT$_EXTENSION_EXPORTREQ
  CHECK (export_required IN ('Y', 'N'))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_EXTENSION ADD (
  CONSTRAINT REPCAT$_EXTENSION_PUSH_TO_MDEF
  CHECK (push_to_mdef IN ('Y', 'N'))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_EXTENSION ADD (
  CONSTRAINT REPCAT$_EXTENSION_PUSH_TO_NEW
  CHECK (push_to_new IN ('Y', 'N'))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_EXTENSION ADD (
  CONSTRAINT REPCAT$_EXTENSION_STATUS
  CHECK (extension_status IN (0, 1, 2, 3, 4))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_EXTENSION ADD (
  PRIMARY KEY
  (EXTENSION_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_FLAVORS
  DROP CONSTRAINT REPCAT$_FLAVORS_FK1;

ALTER TABLE SYSTEM.REPCAT$_FLAVORS
  DROP CONSTRAINT REPCAT$_FLAVORS_C2;

ALTER TABLE SYSTEM.REPCAT$_FLAVORS MODIFY 
  FLAVOR_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_FLAVORS MODIFY 
  GNAME NULL;

ALTER TABLE SYSTEM.REPCAT$_FLAVORS
  DROP CONSTRAINT REPCAT$_FLAVORS_UNQ1;

ALTER TABLE SYSTEM.REPCAT$_FLAVORS ADD (
  CONSTRAINT REPCAT$_FLAVORS_C2
  CHECK (published is NULL or (published in ('Y','N','O')))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_FLAVORS MODIFY 
  FLAVOR_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_FLAVORS MODIFY 
  GNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_FLAVORS ADD (
  CONSTRAINT REPCAT$_FLAVORS_UNQ1
  UNIQUE (GNAME, FLAVOR_ID, GOWNER)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS
  DROP CONSTRAINT REPCAT$_FLAVOR_OBJECTS_FK1;

ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS
  DROP CONSTRAINT REPCAT$_FLAVOR_OBJECTS_FK2;

ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS
  DROP CONSTRAINT REPCAT$_FLAVOR_OBJECTS_VERSION;

ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS
  DROP CONSTRAINT REPCAT$_FLAVOR_OBJECTS_PK;

ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS ADD (
  CONSTRAINT REPCAT$_FLAVOR_OBJECTS_VERSION
  CHECK (version# >= 0 AND version# < 65536)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS ADD (
  CONSTRAINT REPCAT$_FLAVOR_OBJECTS_PK
  PRIMARY KEY
  (SNAME, ONAME, TYPE, GNAME, FLAVOR_ID, GOWNER)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_GENERATED
  DROP CONSTRAINT REPCAT$_REPGEN_PRNT;

ALTER TABLE SYSTEM.REPCAT$_GENERATED
  DROP CONSTRAINT REPCAT$_REPGEN_PRNT2;

ALTER TABLE SYSTEM.REPCAT$_GENERATED
  DROP CONSTRAINT REPCAT$_GENERATED_OBJ;

ALTER TABLE SYSTEM.REPCAT$_GENERATED
  DROP CONSTRAINT REPCAT$_REPGEN_PRIMARY;

ALTER TABLE SYSTEM.REPCAT$_GENERATED ADD (
  CONSTRAINT REPCAT$_GENERATED_OBJ
  CHECK (reason IN (0, 1, 2, 3, 4, 5, 6, 7, 9, 10))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_GENERATED ADD (
  CONSTRAINT REPCAT$_REPGEN_PRIMARY
  PRIMARY KEY
  (SNAME, ONAME, TYPE, BASE_SNAME, BASE_ONAME, BASE_TYPE)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS
  DROP CONSTRAINT REPCAT$_OBJECT_PARMS_FK2;

ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS
  DROP CONSTRAINT SYS_C003901;

ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS
  DROP CONSTRAINT SYS_C003902;

ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS
  DROP CONSTRAINT REPCAT$_OBJECT_PARMS_PK;

ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS ADD (
  CHECK ("TEMPLATE_PARAMETER_ID" IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS ADD (
  CHECK ("TEMPLATE_OBJECT_ID" IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS ADD (
  CONSTRAINT REPCAT$_OBJECT_PARMS_PK
  PRIMARY KEY
  ()
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_PRIORITY
  DROP CONSTRAINT REPCAT$_PRIORITY_NN1;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY
  DROP CONSTRAINT REPCAT$_PRIORITY_NN2;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY
  DROP CONSTRAINT REPCAT$_PRIORITY_NN3;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY
  DROP CONSTRAINT REPCAT$_PRIORITY_PK;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY ADD (
  CONSTRAINT REPCAT$_PRIORITY_NN1
  CHECK ("SNAME" IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_PRIORITY ADD (
  CONSTRAINT REPCAT$_PRIORITY_NN2
  CHECK ("PRIORITY_GROUP" IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_PRIORITY ADD (
  CONSTRAINT REPCAT$_PRIORITY_NN3
  CHECK ("PRIORITY" IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_PRIORITY ADD (
  CONSTRAINT REPCAT$_PRIORITY_PK
  PRIMARY KEY
  ()
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP
  DROP CONSTRAINT REPCAT$_PRIORITY_GROUP_C1;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP
  DROP CONSTRAINT REPCAT$_PRIORITY_GROUP_C2;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP MODIFY 
  DATA_TYPE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP
  DROP CONSTRAINT REPCAT$_PRIORITY_GROUP_PK;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP
  DROP CONSTRAINT REPCAT$_PRIORITY_GROUP_U1;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP ADD (
  CONSTRAINT REPCAT$_PRIORITY_GROUP_C1
  CHECK (data_type_id in (1, 2, 3, 4, 5, 6, 7))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP ADD (
  CONSTRAINT REPCAT$_PRIORITY_GROUP_C2
  CHECK ((data_type_id in (4, 7) and
                  fixed_data_length is not null)
              or (data_type_id in (1, 2, 3, 5, 6) and
                  fixed_data_length is null))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP MODIFY 
  DATA_TYPE_ID CONSTRAINT REPCAT$_PRIORITY_GROUP_NN1 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP ADD (
  CONSTRAINT REPCAT$_PRIORITY_GROUP_PK
  PRIMARY KEY
  (PRIORITY_GROUP, SNAME)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_PRIORITY_GROUP ADD (
  CONSTRAINT REPCAT$_PRIORITY_GROUP_U1
  UNIQUE (SNAME, PRIORITY_GROUP, DATA_TYPE_ID, FIXED_DATA_LENGTH)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES
  DROP CONSTRAINT REPCAT$_REFRESH_TEMPLATES_FK1;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES
  DROP CONSTRAINT REPCAT$_REFRESH_TEMPLATES_FK2;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES
  DROP CONSTRAINT REFRESH_TEMPLATES_C1;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_TEMPLATE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  OWNER NULL;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_GROUP_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_TEMPLATE_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_GROUP_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  TEMPLATE_TYPE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  TEMPLATE_STATUS_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES
  DROP CONSTRAINT REPCAT$_REFRESH_TEMPLATES_PK;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES
  DROP CONSTRAINT REPCAT$_REFRESH_TEMPLATES_U1;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES ADD (
  CONSTRAINT REFRESH_TEMPLATES_C1
  CHECK ((public_template in ('Y','N'))
   or public_template is NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_TEMPLATE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  OWNER NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_GROUP_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_TEMPLATE_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  REFRESH_GROUP_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  TEMPLATE_TYPE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES MODIFY 
  TEMPLATE_STATUS_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES ADD (
  CONSTRAINT REPCAT$_REFRESH_TEMPLATES_PK
  PRIMARY KEY
  (REFRESH_TEMPLATE_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES ADD (
  CONSTRAINT REPCAT$_REFRESH_TEMPLATES_U1
  UNIQUE (REFRESH_TEMPLATE_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPCAT
  DROP CONSTRAINT REPCAT$_REPCAT_STATUS;

ALTER TABLE SYSTEM.REPCAT$_REPCAT
  DROP CONSTRAINT REPCAT$_REPCAT_PRIMARY;

ALTER TABLE SYSTEM.REPCAT$_REPCAT ADD (
  CONSTRAINT REPCAT$_REPCAT_STATUS
  CHECK (status IN (0, 1, 2))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPCAT ADD (
  CONSTRAINT REPCAT$_REPCAT_PRIMARY
  PRIMARY KEY
  (SNAME, GOWNER)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPCATLOG
  DROP CONSTRAINT REPCAT$_REPCATLOG_REQUEST;

ALTER TABLE SYSTEM.REPCAT$_REPCATLOG
  DROP CONSTRAINT REPCAT$_REPCATLOG_STATUS;

ALTER TABLE SYSTEM.REPCAT$_REPCATLOG
  DROP CONSTRAINT REPCAT$_REPCATLOG_TYPE;

ALTER TABLE SYSTEM.REPCAT$_REPCATLOG
  DROP CONSTRAINT REPCAT$_REPCATLOG_PRIMARY;

ALTER TABLE SYSTEM.REPCAT$_REPCATLOG ADD (
  CONSTRAINT REPCAT$_REPCATLOG_REQUEST
  CHECK (request IN (-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
                                       11, 12, 13, 14, 15, 16, 17,
                                       18, 19, 20, 21, 22, 23, 24, 25))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPCATLOG ADD (
  CONSTRAINT REPCAT$_REPCATLOG_STATUS
  CHECK (status IN (0, 1, 2, 3, 4))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPCATLOG ADD (
  CONSTRAINT REPCAT$_REPCATLOG_TYPE
  CHECK (type IN (-1, 0, 1, 2, 4, 5, 7, 8, 9, 11, 12, -3,
                                    13, 14, 32, 33))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPCATLOG ADD (
  CONSTRAINT REPCAT$_REPCATLOG_PRIMARY
  PRIMARY KEY
  (ID, SOURCE, ROLE, MASTER)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPCOLUMN
  DROP CONSTRAINT REPCAT$_REPCOLUMN_FK;

ALTER TABLE SYSTEM.REPCAT$_REPCOLUMN
  DROP CONSTRAINT REPCAT$_REPCOLUMN_VERSION;

ALTER TABLE SYSTEM.REPCAT$_REPCOLUMN
  DROP CONSTRAINT REPCAT$_REPCOLUMN_PK;

ALTER TABLE SYSTEM.REPCAT$_REPCOLUMN ADD (
  CONSTRAINT REPCAT$_REPCOLUMN_VERSION
  CHECK (version# >= 0 AND version# < 65536)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPCOLUMN ADD (
  CONSTRAINT REPCAT$_REPCOLUMN_PK
  PRIMARY KEY
  (SNAME, ONAME, TYPE, CNAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS
  DROP CONSTRAINT REPCAT$_REPGROUP_PRIVS_FK;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS MODIFY 
  USERNAME NULL;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS MODIFY 
  GLOBAL_FLAG NULL;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS MODIFY 
  CREATED NULL;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS
  DROP CONSTRAINT REPCAT$_REPGROUP_PRIVS_UK;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS MODIFY 
  USERNAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS MODIFY 
  GLOBAL_FLAG NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS MODIFY 
  CREATED NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS ADD (
  CONSTRAINT REPCAT$_REPGROUP_PRIVS_UK
  UNIQUE (USERNAME, GNAME, GOWNER)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPOBJECT
  DROP CONSTRAINT REPCAT$_REPOBJECT_PRNT;

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT
  DROP CONSTRAINT REPCAT$_REPOBJECT_GENPACKAGE;

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT
  DROP CONSTRAINT REPCAT$_REPOBJECT_GENTRIGGER;

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT
  DROP CONSTRAINT REPCAT$_REPOBJECT_STATUS;

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT
  DROP CONSTRAINT REPCAT$_REPOBJECT_TYPE;

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT
  DROP CONSTRAINT REPCAT$_REPOBJECT_VERSION;

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT
  DROP CONSTRAINT REPCAT$_REPOBJECT_PRIMARY;

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT ADD (
  CONSTRAINT REPCAT$_REPOBJECT_GENPACKAGE
  CHECK (genpackage IN (0, 1, 2))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT ADD (
  CONSTRAINT REPCAT$_REPOBJECT_GENTRIGGER
  CHECK (gentrigger IN (0, 1, 2))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT ADD (
  CONSTRAINT REPCAT$_REPOBJECT_STATUS
  CHECK (status IN (0, 1, 2, 3, 4, 5, 6))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT ADD (
  CONSTRAINT REPCAT$_REPOBJECT_TYPE
  CHECK (type IN (-1, 1, 2, 4, 5, 7, 8, 9, 11, 12, -3,
                                      -4, 13, 14, 32, 33))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT ADD (
  CONSTRAINT REPCAT$_REPOBJECT_VERSION
  CHECK (version# >= 0 AND version# < 65536)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPOBJECT ADD (
  CONSTRAINT REPCAT$_REPOBJECT_PRIMARY
  PRIMARY KEY
  (SNAME, ONAME, TYPE)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPPROP
  DROP CONSTRAINT REPCAT$_REPPROP_PRNT;

ALTER TABLE SYSTEM.REPCAT$_REPPROP
  DROP CONSTRAINT REPCAT$_REPPROP_HOW;

ALTER TABLE SYSTEM.REPCAT$_REPPROP
  DROP CONSTRAINT REPCAT$_REPPROP_PRIMARY;

ALTER TABLE SYSTEM.REPCAT$_REPPROP ADD (
  CONSTRAINT REPCAT$_REPPROP_HOW
  CHECK (how IN (0, 1, 2, 3))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPPROP ADD (
  CONSTRAINT REPCAT$_REPPROP_PRIMARY
  PRIMARY KEY
  (SNAME, ONAME, TYPE, DBLINK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_RESOLUTION
  DROP CONSTRAINT REPCAT$_RESOLUTION_F3;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION
  DROP CONSTRAINT REPCAT$_RESOLUTION_NN1;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION
  DROP CONSTRAINT REPCAT$_RESOLUTION_NN2;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION
  DROP CONSTRAINT REPCAT$_RESOLUTION_PK;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION ADD (
  CONSTRAINT REPCAT$_RESOLUTION_NN1
  CHECK ("METHOD_NAME" IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION ADD (
  CONSTRAINT REPCAT$_RESOLUTION_NN2
  CHECK ("FUNCTION_NAME" IS NOT NULL)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION ADD (
  CONSTRAINT REPCAT$_RESOLUTION_PK
  PRIMARY KEY
  ()
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  SNAME NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  ONAME NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  CONFLICT_TYPE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  REFERENCE_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  METHOD_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  FUNCTION_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  RESOLVED_DATE NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  PRIMARY_KEY_VALUE NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  SNAME CONSTRAINT REPCAT$_RESOLUTION_STATS_NN1 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  ONAME CONSTRAINT REPCAT$_RESOLUTION_STATS_NN2 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  CONFLICT_TYPE_ID CONSTRAINT REPCAT$_RESOLUTION_STATS_NN3 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  REFERENCE_NAME CONSTRAINT REPCAT$_RESOLUTION_STATS_NN4 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  METHOD_NAME CONSTRAINT REPCAT$_RESOLUTION_STATS_NN5 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  FUNCTION_NAME CONSTRAINT REPCAT$_RESOLUTION_STATS_NN6 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  RESOLVED_DATE CONSTRAINT REPCAT$_RESOLUTION_STATS_NN7 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_STATISTICS MODIFY 
  PRIMARY_KEY_VALUE CONSTRAINT REPCAT$_RESOLUTION_STATS_NN8 NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL MODIFY 
  CREATED NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL MODIFY 
  STATUS NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL MODIFY 
  STATUS_UPDATE_DATE NULL;

ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL
  DROP CONSTRAINT REPCAT$_RESOL_STATS_CTRL_PK;

ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL MODIFY 
  CREATED CONSTRAINT REPCAT$_RESOL_STATS_CTRL_NN1 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL MODIFY 
  STATUS CONSTRAINT REPCAT$_RESOL_STATS_CTRL_NN2 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL MODIFY 
  STATUS_UPDATE_DATE CONSTRAINT REPCAT$_RESOL_STATS_CTRL_NN3 NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_RESOL_STATS_CONTROL ADD (
  CONSTRAINT REPCAT$_RESOL_STATS_CTRL_PK
  PRIMARY KEY
  (SNAME, ONAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_SITES_NEW
  DROP CONSTRAINT REPCAT$_SITES_NEW_FK1;

ALTER TABLE SYSTEM.REPCAT$_SITES_NEW
  DROP CONSTRAINT REPCAT$_SITES_NEW_FK2;

ALTER TABLE SYSTEM.REPCAT$_SITES_NEW
  DROP CONSTRAINT REPCAT$_SITES_NEW_FULL_INST;

ALTER TABLE SYSTEM.REPCAT$_SITES_NEW
  DROP CONSTRAINT REPCAT$_SITES_NEW_PK;

ALTER TABLE SYSTEM.REPCAT$_SITES_NEW ADD (
  CONSTRAINT REPCAT$_SITES_NEW_FULL_INST
  CHECK (full_instantiation IN ('Y', 'N'))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_SITES_NEW ADD (
  CONSTRAINT REPCAT$_SITES_NEW_PK
  PRIMARY KEY
  (EXTENSION_ID, GOWNER, GNAME, DBLINK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS
  DROP CONSTRAINT REPCAT$_SITE_OBJECTS_FK1;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS
  DROP CONSTRAINT REPCAT$_SITE_OBJECT_FK2;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS MODIFY 
  TEMPLATE_SITE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS MODIFY 
  ONAME NULL;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS MODIFY 
  OBJECT_TYPE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS
  DROP CONSTRAINT REPCAT$_SITE_OBJECTS_U1;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS MODIFY 
  TEMPLATE_SITE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS MODIFY 
  ONAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS MODIFY 
  OBJECT_TYPE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS ADD (
  CONSTRAINT REPCAT$_SITE_OBJECTS_U1
  UNIQUE (TEMPLATE_SITE_ID, ONAME, OBJECT_TYPE_ID, SNAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS
  DROP CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_FK1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS
  DROP CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_FK3;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS
  DROP CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_VER;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  TEMPLATE_OBJECT_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  REFRESH_TEMPLATE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  OBJECT_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  OBJECT_TYPE NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  DDL_NUM NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  TEMPLATE_REFGROUP_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS
  DROP CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_PK;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS
  DROP CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_U1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_VER
  CHECK (object_version# >= 0 AND object_version# < 65536)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  TEMPLATE_OBJECT_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  REFRESH_TEMPLATE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  OBJECT_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  OBJECT_TYPE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  DDL_NUM NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS MODIFY 
  TEMPLATE_REFGROUP_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_PK
  PRIMARY KEY
  (TEMPLATE_OBJECT_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_U1
  UNIQUE (OBJECT_NAME, OBJECT_TYPE, REFRESH_TEMPLATE_ID, SCHEMA_NAME, DDL_NUM)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS
  DROP CONSTRAINT REPCAT$_TEMPLATE_PARMS_FK1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS
  DROP CONSTRAINT REPCAT$_TEMPLATE_PARMS_C1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS MODIFY 
  REFRESH_TEMPLATE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS MODIFY 
  PARAMETER_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS
  DROP CONSTRAINT REPCAT$_TEMPLATE_PARMS_PK;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS
  DROP CONSTRAINT REPCAT$_TEMPLATE_PARMS_U1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_PARMS_C1
  CHECK (user_override in ('Y','N'))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS MODIFY 
  REFRESH_TEMPLATE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS MODIFY 
  PARAMETER_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_PARMS_PK
  PRIMARY KEY
  (TEMPLATE_PARAMETER_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_PARMS_U1
  UNIQUE (REFRESH_TEMPLATE_ID, PARAMETER_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS
  DROP CONSTRAINT REPCAT$_TEMPLATE_REFGROUPS_FK1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS MODIFY 
  REFRESH_GROUP_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS MODIFY 
  REFRESH_GROUP_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS MODIFY 
  REFRESH_TEMPLATE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS
  DROP CONSTRAINT REPCAT$_TEMPLATE_REFGROUPS_PK;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS MODIFY 
  REFRESH_GROUP_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS MODIFY 
  REFRESH_GROUP_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS MODIFY 
  REFRESH_TEMPLATE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_REFGROUPS_PK
  PRIMARY KEY
  (REFRESH_GROUP_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES
  DROP CONSTRAINT REPCAT$_TEMPLATE_SITES_C1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES
  DROP CONSTRAINT REPCAT$_TEMPLATE_SITES_C2;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES MODIFY 
  REFRESH_TEMPLATE_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES MODIFY 
  USER_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES MODIFY 
  STATUS NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES
  DROP CONSTRAINT REPCAT$_TEMPLATE_SITES_PK;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES
  DROP CONSTRAINT REPCAT$_TEMPLATE_SITES_U1;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES ADD (
  CONSTRAINT REPCAT$_TEMPLATE_SITES_C1
  CHECK (status in (-100,-1,0,1))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES ADD (
  CONSTRAINT REPCAT$_TEMPLATE_SITES_C2
  CHECK ((site_name is not null and repapi_site_id is null) or
   (site_name is null and repapi_site_id is not null))
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES MODIFY 
  REFRESH_TEMPLATE_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES MODIFY 
  USER_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES MODIFY 
  STATUS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES ADD (
  CONSTRAINT REPCAT$_TEMPLATE_SITES_PK
  PRIMARY KEY
  (TEMPLATE_SITE_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_SITES ADD (
  CONSTRAINT REPCAT$_TEMPLATE_SITES_U1
  UNIQUE (REFRESH_TEMPLATE_NAME, USER_NAME, SITE_NAME, REPAPI_SITE_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_STATUS MODIFY 
  STATUS_TYPE_NAME NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_STATUS
  DROP CONSTRAINT REPCAT$_TEMPLATE_STATUS_PK;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_STATUS MODIFY 
  STATUS_TYPE_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_STATUS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_STATUS_PK
  PRIMARY KEY
  (TEMPLATE_STATUS_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_TARGETS MODIFY 
  TARGET_DATABASE NULL;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_TARGETS
  DROP CONSTRAINT TEMPLATE$_TARGETS_PK;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_TARGETS MODIFY 
  TARGET_DATABASE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_TARGETS ADD (
  CONSTRAINT TEMPLATE$_TARGETS_PK
  PRIMARY KEY
  (TEMPLATE_TARGET_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS
  DROP CONSTRAINT REPCAT$_USER_AUTHORIZATION_FK2;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS MODIFY 
  USER_AUTHORIZATION_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS MODIFY 
  USER_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS MODIFY 
  REFRESH_TEMPLATE_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS
  DROP CONSTRAINT REPCAT$_USER_AUTHORIZATIONS_PK;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS
  DROP CONSTRAINT REPCAT$_USER_AUTHORIZATIONS_U1;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS MODIFY 
  USER_AUTHORIZATION_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS MODIFY 
  USER_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS MODIFY 
  REFRESH_TEMPLATE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS ADD (
  CONSTRAINT REPCAT$_USER_AUTHORIZATIONS_PK
  PRIMARY KEY
  (USER_AUTHORIZATION_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS ADD (
  CONSTRAINT REPCAT$_USER_AUTHORIZATIONS_U1
  UNIQUE (USER_ID, REFRESH_TEMPLATE_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES
  DROP CONSTRAINT REPCAT$_USER_PARM_VALUES_FK1;

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES MODIFY 
  TEMPLATE_PARAMETER_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES MODIFY 
  USER_ID NULL;

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES
  DROP CONSTRAINT REPCAT$_USER_PARM_VALUES_PK;

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES
  DROP CONSTRAINT REPCAT$_USER_PARM_VALUES_U1;

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES MODIFY 
  TEMPLATE_PARAMETER_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES MODIFY 
  USER_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES ADD (
  CONSTRAINT REPCAT$_USER_PARM_VALUES_PK
  PRIMARY KEY
  (USER_PARAMETER_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES ADD (
  CONSTRAINT REPCAT$_USER_PARM_VALUES_U1
  UNIQUE (TEMPLATE_PARAMETER_ID, USER_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.SCHEDULER_PROGRAM_ARGS_TBL MODIFY 
  PROGRAM_NAME NULL;

ALTER TABLE SYSTEM.SCHEDULER_PROGRAM_ARGS_TBL MODIFY 
  ARGUMENT_POSITION NULL;

ALTER TABLE SYSTEM.SCHEDULER_PROGRAM_ARGS_TBL MODIFY 
  PROGRAM_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.SCHEDULER_PROGRAM_ARGS_TBL MODIFY 
  ARGUMENT_POSITION NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  ABILITY_NAME NULL;

ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_ABILITY
  DROP CONSTRAINT SYS_C0014914;

ALTER TABLE SYSTEM.T_ABILITY
  DROP CONSTRAINT SYS_C0014915;

ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  ABILITY_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_ABILITY ADD (
  UNIQUE (ABILITY_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  LEVEL_NAME NULL;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL
  DROP CONSTRAINT SYS_C0014916;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL
  DROP CONSTRAINT SYS_C0014917;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  LEVEL_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ABILITY_LEVEL ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_ABILITY_LEVEL ADD (
  UNIQUE (LEVEL_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_DEPARTMENT
  DROP CONSTRAINT T_DEPARTMENT_R01;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  DEPARTMENT_NAME NULL;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_DEPARTMENT
  DROP CONSTRAINT SYS_C0014918;

ALTER TABLE SYSTEM.T_DEPARTMENT
  DROP CONSTRAINT SYS_C0014919;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  DEPARTMENT_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_DEPARTMENT MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_DEPARTMENT ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_DEPARTMENT ADD (
  UNIQUE (DEPARTMENT_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  EDUCATION_SUBJECT NULL;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  EDUCATION_CONTENT NULL;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  PLANNED_DATE NULL;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  COMPLETE_DATE NULL;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  EDUCATOR_FK NULL;

ALTER TABLE SYSTEM.T_EDUCATION
  DROP CONSTRAINT SYS_C0014927;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  EDUCATION_SUBJECT NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  EDUCATION_CONTENT NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  PLANNED_DATE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  COMPLETE_DATE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION MODIFY 
  EDUCATOR_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL MODIFY 
  EDUCATION_FK NULL;

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL MODIFY 
  ABILITY_FK NULL;

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL
  DROP CONSTRAINT SYS_C0014928;

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL MODIFY 
  EDUCATION_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL MODIFY 
  ABILITY_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_ABILITY_REL ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  MODIFIED_TIME NULL;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  EDUCATION_ID NULL;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  STATE_ID NULL;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL
  DROP CONSTRAINT SYS_C0014929;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  MODIFIED_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  EDUCATION_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL MODIFY 
  STATE_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_STATE_REL ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_EDUCATION_USER_REL MODIFY 
  EDUCATION_FK NULL;

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL MODIFY 
  USER_FK NULL;

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL
  DROP CONSTRAINT SYS_C0014930;

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL MODIFY 
  EDUCATION_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL MODIFY 
  USER_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATION_USER_REL ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  EDUCATOR_NAME NULL;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  IS_INHOUSE NULL;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  MODIFIED_TIME NULL;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  EDUCATOR_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  IS_INHOUSE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_EDUCATOR MODIFY 
  MODIFIED_TIME NOT NULL
  ENABLE VALIDATE;


ALTER TABLE SYSTEM.T_ROLE
  DROP CONSTRAINT FK_ROLE_DEPARTMENT;

ALTER TABLE SYSTEM.T_ROLE
  DROP CONSTRAINT SYS_C0014933;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  ROLE_NAME NULL;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  IS_UNIT_MANAGER_ROLE NULL;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  IS_DEPARTMENT_MANAGER_ROLE NULL;

ALTER TABLE SYSTEM.T_ROLE
  DROP CONSTRAINT SYS_C0014924;

ALTER TABLE SYSTEM.T_ROLE
  DROP CONSTRAINT SYS_C0014925;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  ROLE_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  IS_UNIT_MANAGER_ROLE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ROLE MODIFY 
  IS_DEPARTMENT_MANAGER_ROLE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_ROLE ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_ROLE ADD (
  UNIQUE (ROLE_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_STATE MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  STATE_NAME NULL;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  MODIFIED_TIME NULL;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_STATE
  DROP CONSTRAINT SYS_C0014920;

ALTER TABLE SYSTEM.T_STATE
  DROP CONSTRAINT SYS_C0014921;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  STATE_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  MODIFIED_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_STATE MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_STATE ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_STATE ADD (
  UNIQUE (STATE_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_UNIT
  DROP CONSTRAINT SYS_C0014931;

ALTER TABLE SYSTEM.T_UNIT
  DROP CONSTRAINT T_UNIT_R02;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  UNIT_NAME NULL;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  DEPARTMENT_FK NULL;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_UNIT
  DROP CONSTRAINT SYS_C0014922;

ALTER TABLE SYSTEM.T_UNIT
  DROP CONSTRAINT SYS_C0014923;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  UNIT_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  DEPARTMENT_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_UNIT MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_UNIT ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_UNIT ADD (
  UNIQUE (UNIT_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_USER
  DROP CONSTRAINT SYS_C0014934;

ALTER TABLE SYSTEM.T_USER MODIFY 
  PK NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  U_ID NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  U_PW NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  FIRST_NAME NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  LAST_NAME NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  DATE_OF_BIRTH NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  PHONE_NUMBER NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  ADDRESS NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  IS_ACTIVE NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  ROLE_FK NULL;

ALTER TABLE SYSTEM.T_USER MODIFY 
  EMAIL NULL;

ALTER TABLE SYSTEM.T_USER
  DROP CONSTRAINT T_USER_PK;

ALTER TABLE SYSTEM.T_USER MODIFY 
  PK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  U_ID NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  U_PW NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  FIRST_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  LAST_NAME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  DATE_OF_BIRTH NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  PHONE_NUMBER NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  ADDRESS NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  IS_ACTIVE NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  ROLE_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER MODIFY 
  EMAIL NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER ADD (
  CONSTRAINT T_USER_PK
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_USER_ABILITY_REL
  DROP CONSTRAINT T_USER_ABILITY_REL_R01;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL
  DROP CONSTRAINT T_USER_ABILITY_REL_R02;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL
  DROP CONSTRAINT T_USER_ABILITY_REL_R03;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  CREATION_TIME NULL;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  ABILITY_FK NULL;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  ABILITY_LEVEL_FK NULL;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  USER_FK NULL;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL
  DROP CONSTRAINT SYS_C0014926;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  CREATION_TIME NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  ABILITY_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  ABILITY_LEVEL_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL MODIFY 
  USER_FK NOT NULL
  ENABLE VALIDATE;

ALTER TABLE SYSTEM.T_USER_ABILITY_REL ADD (
  PRIMARY KEY
  (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_CALLDEST
  DROP CONSTRAINT DEF$_CALL_DESTINATION;

ALTER TABLE SYSTEM.DEF$_CALLDEST
  DROP CONSTRAINT DEF$_CALLDEST_PRIMARY;

ALTER TABLE SYSTEM.DEF$_CALLDEST ADD (
  CONSTRAINT DEF$_CALLDEST_PRIMARY
  PRIMARY KEY
  (ENQ_TID, DBLINK, STEP_NO)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_DEFAULTDEST
  DROP CONSTRAINT DEF$_DEFAULTDEST_PRIMARY;

ALTER TABLE SYSTEM.DEF$_DEFAULTDEST ADD (
  CONSTRAINT DEF$_DEFAULTDEST_PRIMARY
  PRIMARY KEY
  (DBLINK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_ERROR
  DROP CONSTRAINT DEF$_ERROR_PRIMARY;

ALTER TABLE SYSTEM.DEF$_ERROR ADD (
  CONSTRAINT DEF$_ERROR_PRIMARY
  PRIMARY KEY
  (ENQ_TID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_LOB
  DROP CONSTRAINT DEF$_LOB_PRIMARY;

ALTER TABLE SYSTEM.DEF$_LOB ADD (
  CONSTRAINT DEF$_LOB_PRIMARY
  PRIMARY KEY
  (ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_AGE_SPILL$
  DROP CONSTRAINT LOGMNR_AGE_SPILL$_PK;

ALTER TABLE SYSTEM.LOGMNR_AGE_SPILL$ ADD (
  CONSTRAINT LOGMNR_AGE_SPILL$_PK
  PRIMARY KEY
  (SESSION#, XIDUSN, XIDSLT, XIDSQN, CHUNK, SEQUENCE#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_DICTSTATE$
  DROP CONSTRAINT LOGMNR_DICTSTATE$_PK;

ALTER TABLE SYSTEM.LOGMNR_DICTSTATE$ ADD (
  CONSTRAINT LOGMNR_DICTSTATE$_PK
  PRIMARY KEY
  (LOGMNR_UID)
  DISABLE NOVALIDATE);


ALTER TABLE SYSTEM.LOGMNR_DID$
  DROP CONSTRAINT LOGMNR_DID$_PK;

ALTER TABLE SYSTEM.LOGMNR_DID$ ADD (
  CONSTRAINT LOGMNR_DID$_PK
  PRIMARY KEY
  (SESSION#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_INTEGRATED_SPILL$
  DROP CONSTRAINT LOGMNR_INTEG_SPILL$_PK;

ALTER TABLE SYSTEM.LOGMNR_INTEGRATED_SPILL$ ADD (
  CONSTRAINT LOGMNR_INTEG_SPILL$_PK
  PRIMARY KEY
  (SESSION#, XIDUSN, XIDSLT, XIDSQN, CHUNK, FLAG)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_LOG$
  DROP CONSTRAINT LOGMNR_LOG$_PK;

ALTER TABLE SYSTEM.LOGMNR_LOG$ ADD (
  CONSTRAINT LOGMNR_LOG$_PK
  PRIMARY KEY
  (SESSION#, THREAD#, SEQUENCE#, FIRST_CHANGE#, DB_ID, RESETLOGS_CHANGE#, RESET_TIMESTAMP)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_PROCESSED_LOG$
  DROP CONSTRAINT LOGMNR_PROCESSED_LOG$_PK;

ALTER TABLE SYSTEM.LOGMNR_PROCESSED_LOG$ ADD (
  CONSTRAINT LOGMNR_PROCESSED_LOG$_PK
  PRIMARY KEY
  (SESSION#, THREAD#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_RESTART_CKPT$
  DROP CONSTRAINT LOGMNR_RESTART_CKPT$_PK;

ALTER TABLE SYSTEM.LOGMNR_RESTART_CKPT$ ADD (
  CONSTRAINT LOGMNR_RESTART_CKPT$_PK
  PRIMARY KEY
  (SESSION#, CKPT_SCN, XIDUSN, XIDSLT, XIDSQN, SESSION_NUM, SERIAL_NUM)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_RESTART_CKPT_TXINFO$
  DROP CONSTRAINT LOGMNR_RESTART_CKPT_TXINFO$_PK;

ALTER TABLE SYSTEM.LOGMNR_RESTART_CKPT_TXINFO$ ADD (
  CONSTRAINT LOGMNR_RESTART_CKPT_TXINFO$_PK
  PRIMARY KEY
  (SESSION#, XIDUSN, XIDSLT, XIDSQN, SESSION_NUM, SERIAL_NUM, EFFECTIVE_SCN)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_SESSION_EVOLVE$
  DROP CONSTRAINT LOGMNR_SESSION_EVOLVE$_PK;

ALTER TABLE SYSTEM.LOGMNR_SESSION_EVOLVE$ ADD (
  CONSTRAINT LOGMNR_SESSION_EVOLVE$_PK
  PRIMARY KEY
  (SESSION#, DB_ID, RESET_SCN, RESET_TIMESTAMP)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_SPILL$
  DROP CONSTRAINT LOGMNR_SPILL$_PK;

ALTER TABLE SYSTEM.LOGMNR_SPILL$ ADD (
  CONSTRAINT LOGMNR_SPILL$_PK
  PRIMARY KEY
  (SESSION#, XIDUSN, XIDSLT, XIDSQN, CHUNK, STARTIDX, ENDIDX, FLAG, SEQUENCE#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGMNR_UID$
  DROP CONSTRAINT LOGMNR_UID$_PK;

ALTER TABLE SYSTEM.LOGMNR_UID$ ADD (
  CONSTRAINT LOGMNR_UID$_PK
  PRIMARY KEY
  (LOGMNR_UID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.LOGSTDBY$EDS_TABLES
  DROP CONSTRAINT LOGSTDBY$EDS_TABLES_PKEY;

ALTER TABLE SYSTEM.LOGSTDBY$EDS_TABLES ADD (
  CONSTRAINT LOGSTDBY$EDS_TABLES_PKEY
  PRIMARY KEY
  (OWNER, TABLE_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_EXCEPTIONS
  DROP CONSTRAINT REPCAT$_EXCEPTIONS_PK;

ALTER TABLE SYSTEM.REPCAT$_EXCEPTIONS ADD (
  CONSTRAINT REPCAT$_EXCEPTIONS_PK
  PRIMARY KEY
  (EXCEPTION_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_GROUPED_COLUMN
  DROP CONSTRAINT REPCAT$_GROUPED_COLUMN_F1;

ALTER TABLE SYSTEM.REPCAT$_GROUPED_COLUMN
  DROP CONSTRAINT REPCAT$_GROUPED_COLUMN_PK;

ALTER TABLE SYSTEM.REPCAT$_GROUPED_COLUMN ADD (
  CONSTRAINT REPCAT$_GROUPED_COLUMN_PK
  PRIMARY KEY
  (SNAME, ONAME, GROUP_NAME, COLUMN_NAME, POS)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_INSTANTIATION_DDL
  DROP CONSTRAINT REPCAT$_INSTANTIATION_DDL_FK1;

ALTER TABLE SYSTEM.REPCAT$_INSTANTIATION_DDL
  DROP CONSTRAINT REPCAT$_INSTANTIATION_DDL_PK;

ALTER TABLE SYSTEM.REPCAT$_INSTANTIATION_DDL ADD (
  CONSTRAINT REPCAT$_INSTANTIATION_DDL_PK
  PRIMARY KEY
  (REFRESH_TEMPLATE_ID, PHASE, DDL_NUM)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_KEY_COLUMNS
  DROP CONSTRAINT REPCAT$_KEY_COLUMNS_PRNT;

ALTER TABLE SYSTEM.REPCAT$_KEY_COLUMNS
  DROP CONSTRAINT REPCAT$_KEY_COLUMNS_PRIMARY;

ALTER TABLE SYSTEM.REPCAT$_KEY_COLUMNS ADD (
  CONSTRAINT REPCAT$_KEY_COLUMNS_PRIMARY
  PRIMARY KEY
  (SNAME, ONAME, COL)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_OBJECT_TYPES
  DROP CONSTRAINT REPCAT$_OBJECT_TYPE_PK;

ALTER TABLE SYSTEM.REPCAT$_OBJECT_TYPES ADD (
  CONSTRAINT REPCAT$_OBJECT_TYPE_PK
  PRIMARY KEY
  (OBJECT_TYPE_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_PARAMETER_COLUMN
  DROP CONSTRAINT REPCAT$_PARAMETER_COLUMN_F1;

ALTER TABLE SYSTEM.REPCAT$_PARAMETER_COLUMN
  DROP CONSTRAINT REPCAT$_PARAMETER_COLUMN_PK;

ALTER TABLE SYSTEM.REPCAT$_PARAMETER_COLUMN ADD (
  CONSTRAINT REPCAT$_PARAMETER_COLUMN_PK
  PRIMARY KEY
  (SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME, SEQUENCE_NO, PARAMETER_TABLE_NAME, PARAMETER_SEQUENCE_NO, COLUMN_POS)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPSCHEMA
  DROP CONSTRAINT REPCAT$_REPSCHEMA_DEST;

ALTER TABLE SYSTEM.REPCAT$_REPSCHEMA
  DROP CONSTRAINT REPCAT$_REPSCHEMA_PRNT;

ALTER TABLE SYSTEM.REPCAT$_REPSCHEMA
  DROP CONSTRAINT REPCAT$_REPSCHEMA_PRIMARY;

ALTER TABLE SYSTEM.REPCAT$_REPSCHEMA ADD (
  CONSTRAINT REPCAT$_REPSCHEMA_PRIMARY
  PRIMARY KEY
  (SNAME, DBLINK, GOWNER)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_METHOD
  DROP CONSTRAINT REPCAT$_RESOL_METHOD_PK;

ALTER TABLE SYSTEM.REPCAT$_RESOLUTION_METHOD ADD (
  CONSTRAINT REPCAT$_RESOL_METHOD_PK
  PRIMARY KEY
  (CONFLICT_TYPE_ID, METHOD_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_TYPES
  DROP CONSTRAINT REPCAT$_TEMPLATE_TYPES_PK;

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_TYPES ADD (
  CONSTRAINT REPCAT$_TEMPLATE_TYPES_PK
  PRIMARY KEY
  (TEMPLATE_TYPE_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_AJG
  DROP CONSTRAINT MVIEW$_ADV_AJG_FK;


ALTER TABLE SYSTEM.MVIEW$_ADV_EXCEPTIONS
  DROP CONSTRAINT MVIEW$_ADV_EXCEPTION_FK;


ALTER TABLE SYSTEM.REPCAT$_DDL
  DROP CONSTRAINT REPCAT$_DDL_PRNT;


ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS
  DROP CONSTRAINT REPCAT$_OBJECT_PARMS_FK1;


ALTER TABLE SYSTEM.REPCAT$_PRIORITY
  DROP CONSTRAINT REPCAT$_PRIORITY_F1;


ALTER TABLE SYSTEM.REPCAT$_RESOLUTION
  DROP CONSTRAINT REPCAT$_RESOLUTION_F1;


ALTER TABLE SYSTEM.AQ$_INTERNET_AGENT_PRIVS ADD (
  CONSTRAINT AGENT_MUST_BE_CREATED 
  FOREIGN KEY (AGENT_NAME) 
  REFERENCES SYSTEM.AQ$_INTERNET_AGENTS (AGENT_NAME)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_BASETABLE ADD (
  CONSTRAINT MVIEW$_ADV_BASETABLE_FK 
  FOREIGN KEY (QUERYID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_WORKLOAD (QUERYID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_CLIQUE ADD (
  CONSTRAINT MVIEW$_ADV_CLIQUE_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_ELIGIBLE ADD (
  CONSTRAINT MVIEW$_ADV_ELIGIBLE_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_FILTERINSTANCE ADD (
  CONSTRAINT MVIEW$_ADV_FILTERINSTANCE_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_FJG ADD (
  CONSTRAINT MVIEW$_ADV_FJG_FK 
  FOREIGN KEY (AJGID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_AJG (AJGID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_GC ADD (
  CONSTRAINT MVIEW$_ADV_GC_FK 
  FOREIGN KEY (FJGID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_FJG (FJGID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_INFO ADD (
  CONSTRAINT MVIEW$_ADV_INFO_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_JOURNAL ADD (
  CONSTRAINT MVIEW$_ADV_JOURNAL_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_LEVEL ADD (
  CONSTRAINT MVIEW$_ADV_LEVEL_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_OUTPUT ADD (
  CONSTRAINT MVIEW$_ADV_OUTPUT_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP ADD (
  CONSTRAINT MVIEW$_ADV_ROLLUP_CFK 
  FOREIGN KEY (RUNID#, CLEVELID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LEVEL (RUNID#,LEVELID#)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP ADD (
  CONSTRAINT MVIEW$_ADV_ROLLUP_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.MVIEW$_ADV_ROLLUP ADD (
  CONSTRAINT MVIEW$_ADV_ROLLUP_PFK 
  FOREIGN KEY (RUNID#, PLEVELID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LEVEL (RUNID#,LEVELID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN ADD (
  CONSTRAINT REPCAT$_AUDIT_COLUMN_F1 
  FOREIGN KEY (ATTRIBUTE) 
  REFERENCES SYSTEM.REPCAT$_AUDIT_ATTRIBUTE (ATTRIBUTE)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_AUDIT_COLUMN ADD (
  CONSTRAINT REPCAT$_AUDIT_COLUMN_F2 
  FOREIGN KEY (BASE_SNAME, BASE_ONAME, BASE_CONFLICT_TYPE_ID, BASE_REFERENCE_NAME) 
  REFERENCES SYSTEM.REPCAT$_CONFLICT (SNAME,ONAME,CONFLICT_TYPE_ID,REFERENCE_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_FLAVORS ADD (
  CONSTRAINT REPCAT$_FLAVORS_FK1 
  FOREIGN KEY (GNAME, GOWNER) 
  REFERENCES SYSTEM.REPCAT$_REPCAT (SNAME,GOWNER)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS ADD (
  CONSTRAINT REPCAT$_FLAVOR_OBJECTS_FK1 
  FOREIGN KEY (GNAME, GOWNER) 
  REFERENCES SYSTEM.REPCAT$_REPCAT (SNAME,GOWNER)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_FLAVOR_OBJECTS ADD (
  CONSTRAINT REPCAT$_FLAVOR_OBJECTS_FK2 
  FOREIGN KEY (GNAME, FLAVOR_ID, GOWNER) 
  REFERENCES SYSTEM.REPCAT$_FLAVORS (GNAME,FLAVOR_ID,GOWNER)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_GENERATED ADD (
  CONSTRAINT REPCAT$_REPGEN_PRNT 
  FOREIGN KEY (SNAME, ONAME, TYPE) 
  REFERENCES SYSTEM.REPCAT$_REPOBJECT (SNAME,ONAME,TYPE)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_GENERATED ADD (
  CONSTRAINT REPCAT$_REPGEN_PRNT2 
  FOREIGN KEY (BASE_SNAME, BASE_ONAME, BASE_TYPE) 
  REFERENCES SYSTEM.REPCAT$_REPOBJECT (SNAME,ONAME,TYPE)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS ADD (
  CONSTRAINT REPCAT$_OBJECT_PARMS_FK2 
  FOREIGN KEY () 
  REFERENCES SYSTEM.REPCAT$_TEMPLATE_OBJECTS (TEMPLATE_OBJECT_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES ADD (
  CONSTRAINT REPCAT$_REFRESH_TEMPLATES_FK1 
  FOREIGN KEY (TEMPLATE_TYPE_ID) 
  REFERENCES SYSTEM.REPCAT$_TEMPLATE_TYPES (TEMPLATE_TYPE_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REFRESH_TEMPLATES ADD (
  CONSTRAINT REPCAT$_REFRESH_TEMPLATES_FK2 
  FOREIGN KEY (TEMPLATE_STATUS_ID) 
  REFERENCES SYSTEM.REPCAT$_TEMPLATE_STATUS (TEMPLATE_STATUS_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPCOLUMN ADD (
  CONSTRAINT REPCAT$_REPCOLUMN_FK 
  FOREIGN KEY (SNAME, ONAME, TYPE) 
  REFERENCES SYSTEM.REPCAT$_REPOBJECT (SNAME,ONAME,TYPE)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPGROUP_PRIVS ADD (
  CONSTRAINT REPCAT$_REPGROUP_PRIVS_FK 
  FOREIGN KEY (GNAME, GOWNER) 
  REFERENCES SYSTEM.REPCAT$_REPCAT (SNAME,GOWNER)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPOBJECT ADD (
  CONSTRAINT REPCAT$_REPOBJECT_PRNT 
  FOREIGN KEY (GNAME, GOWNER) 
  REFERENCES SYSTEM.REPCAT$_REPCAT (SNAME,GOWNER)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPPROP ADD (
  CONSTRAINT REPCAT$_REPPROP_PRNT 
  FOREIGN KEY (SNAME, ONAME, TYPE) 
  REFERENCES SYSTEM.REPCAT$_REPOBJECT (SNAME,ONAME,TYPE)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_RESOLUTION ADD (
  CONSTRAINT REPCAT$_RESOLUTION_F3 
  FOREIGN KEY () 
  REFERENCES SYSTEM.REPCAT$_CONFLICT (SNAME,ONAME,CONFLICT_TYPE_ID,REFERENCE_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_SITES_NEW ADD (
  CONSTRAINT REPCAT$_SITES_NEW_FK1 
  FOREIGN KEY (EXTENSION_ID) 
  REFERENCES SYSTEM.REPCAT$_EXTENSION (EXTENSION_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_SITES_NEW ADD (
  CONSTRAINT REPCAT$_SITES_NEW_FK2 
  FOREIGN KEY (GNAME, GOWNER) 
  REFERENCES SYSTEM.REPCAT$_REPCAT (SNAME,GOWNER)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS ADD (
  CONSTRAINT REPCAT$_SITE_OBJECTS_FK1 
  FOREIGN KEY (OBJECT_TYPE_ID) 
  REFERENCES SYSTEM.REPCAT$_OBJECT_TYPES (OBJECT_TYPE_ID)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_SITE_OBJECTS ADD (
  CONSTRAINT REPCAT$_SITE_OBJECT_FK2 
  FOREIGN KEY (TEMPLATE_SITE_ID) 
  REFERENCES SYSTEM.REPCAT$_TEMPLATE_SITES (TEMPLATE_SITE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_FK1 
  FOREIGN KEY (REFRESH_TEMPLATE_ID) 
  REFERENCES SYSTEM.REPCAT$_REFRESH_TEMPLATES (REFRESH_TEMPLATE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_OBJECTS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_OBJECTS_FK3 
  FOREIGN KEY (OBJECT_TYPE) 
  REFERENCES SYSTEM.REPCAT$_OBJECT_TYPES (OBJECT_TYPE_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_PARMS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_PARMS_FK1 
  FOREIGN KEY (REFRESH_TEMPLATE_ID) 
  REFERENCES SYSTEM.REPCAT$_REFRESH_TEMPLATES (REFRESH_TEMPLATE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_TEMPLATE_REFGROUPS ADD (
  CONSTRAINT REPCAT$_TEMPLATE_REFGROUPS_FK1 
  FOREIGN KEY (REFRESH_TEMPLATE_ID) 
  REFERENCES SYSTEM.REPCAT$_REFRESH_TEMPLATES (REFRESH_TEMPLATE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_USER_AUTHORIZATIONS ADD (
  CONSTRAINT REPCAT$_USER_AUTHORIZATION_FK2 
  FOREIGN KEY (REFRESH_TEMPLATE_ID) 
  REFERENCES SYSTEM.REPCAT$_REFRESH_TEMPLATES (REFRESH_TEMPLATE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_USER_PARM_VALUES ADD (
  CONSTRAINT REPCAT$_USER_PARM_VALUES_FK1 
  FOREIGN KEY (TEMPLATE_PARAMETER_ID) 
  REFERENCES SYSTEM.REPCAT$_TEMPLATE_PARMS (TEMPLATE_PARAMETER_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_DEPARTMENT ADD (
  CONSTRAINT T_DEPARTMENT_R01 
  FOREIGN KEY (MANAGER_ID) 
  REFERENCES SYSTEM.T_USER (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_ROLE ADD (
  CONSTRAINT FK_ROLE_DEPARTMENT 
  FOREIGN KEY (DEPARTMENT_FK) 
  REFERENCES SYSTEM.T_DEPARTMENT (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_ROLE ADD (
  FOREIGN KEY (UNIT_FK) 
  REFERENCES SYSTEM.T_UNIT (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_UNIT ADD (
  FOREIGN KEY (DEPARTMENT_FK) 
  REFERENCES SYSTEM.T_DEPARTMENT (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_UNIT ADD (
  CONSTRAINT T_UNIT_R02 
  FOREIGN KEY (MANAGER_ID) 
  REFERENCES SYSTEM.T_USER (PK)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_USER ADD (
  FOREIGN KEY (ROLE_FK) 
  REFERENCES SYSTEM.T_ROLE (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.T_USER_ABILITY_REL ADD (
  CONSTRAINT T_USER_ABILITY_REL_R01 
  FOREIGN KEY (ABILITY_FK) 
  REFERENCES SYSTEM.T_ABILITY (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_USER_ABILITY_REL ADD (
  CONSTRAINT T_USER_ABILITY_REL_R02 
  FOREIGN KEY (ABILITY_LEVEL_FK) 
  REFERENCES SYSTEM.T_ABILITY_LEVEL (PK)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.T_USER_ABILITY_REL ADD (
  CONSTRAINT T_USER_ABILITY_REL_R03 
  FOREIGN KEY (USER_FK) 
  REFERENCES SYSTEM.T_USER (PK)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.DEF$_CALLDEST ADD (
  CONSTRAINT DEF$_CALL_DESTINATION 
  FOREIGN KEY (DBLINK, CATCHUP) 
  REFERENCES SYSTEM.DEF$_DESTINATION (DBLINK,CATCHUP)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_GROUPED_COLUMN ADD (
  CONSTRAINT REPCAT$_GROUPED_COLUMN_F1 
  FOREIGN KEY (SNAME, ONAME, GROUP_NAME) 
  REFERENCES SYSTEM.REPCAT$_COLUMN_GROUP (SNAME,ONAME,GROUP_NAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_INSTANTIATION_DDL ADD (
  CONSTRAINT REPCAT$_INSTANTIATION_DDL_FK1 
  FOREIGN KEY (REFRESH_TEMPLATE_ID) 
  REFERENCES SYSTEM.REPCAT$_REFRESH_TEMPLATES (REFRESH_TEMPLATE_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_KEY_COLUMNS ADD (
  CONSTRAINT REPCAT$_KEY_COLUMNS_PRNT 
  FOREIGN KEY (SNAME, ONAME, TYPE) 
  REFERENCES SYSTEM.REPCAT$_REPOBJECT (SNAME,ONAME,TYPE)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_PARAMETER_COLUMN ADD (
  CONSTRAINT REPCAT$_PARAMETER_COLUMN_F1 
  FOREIGN KEY (SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME, SEQUENCE_NO) 
  REFERENCES SYSTEM.REPCAT$_RESOLUTION (SNAME,ONAME,CONFLICT_TYPE_ID,REFERENCE_NAME,SEQUENCE_NO)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_REPSCHEMA ADD (
  CONSTRAINT REPCAT$_REPSCHEMA_DEST 
  FOREIGN KEY (DBLINK, EXTENSION_ID) 
  REFERENCES SYSTEM.DEF$_DESTINATION (DBLINK,CATCHUP)
  ENABLE VALIDATE);

ALTER TABLE SYSTEM.REPCAT$_REPSCHEMA ADD (
  CONSTRAINT REPCAT$_REPSCHEMA_PRNT 
  FOREIGN KEY (SNAME, GOWNER) 
  REFERENCES SYSTEM.REPCAT$_REPCAT (SNAME,GOWNER)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_AJG ADD (
  CONSTRAINT MVIEW$_ADV_AJG_FK 
  FOREIGN KEY () 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.MVIEW$_ADV_EXCEPTIONS ADD (
  CONSTRAINT MVIEW$_ADV_EXCEPTION_FK 
  FOREIGN KEY (RUNID#) 
  REFERENCES SYSTEM.MVIEW$_ADV_LOG (RUNID#)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_DDL ADD (
  CONSTRAINT REPCAT$_DDL_PRNT 
  FOREIGN KEY (LOG_ID, SOURCE, ROLE, MASTER) 
  REFERENCES SYSTEM.REPCAT$_REPCATLOG (ID,SOURCE,ROLE,MASTER)
  ON DELETE CASCADE
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_OBJECT_PARMS ADD (
  CONSTRAINT REPCAT$_OBJECT_PARMS_FK1 
  FOREIGN KEY (TEMPLATE_PARAMETER_ID) 
  REFERENCES SYSTEM.REPCAT$_TEMPLATE_PARMS (TEMPLATE_PARAMETER_ID)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_PRIORITY ADD (
  CONSTRAINT REPCAT$_PRIORITY_F1 
  FOREIGN KEY (PRIORITY_GROUP, SNAME) 
  REFERENCES SYSTEM.REPCAT$_PRIORITY_GROUP (PRIORITY_GROUP,SNAME)
  ENABLE VALIDATE);


ALTER TABLE SYSTEM.REPCAT$_RESOLUTION ADD (
  CONSTRAINT REPCAT$_RESOLUTION_F1 
  FOREIGN KEY (CONFLICT_TYPE_ID, METHOD_NAME) 
  REFERENCES SYSTEM.REPCAT$_RESOLUTION_METHOD (CONFLICT_TYPE_ID,METHOD_NAME)
  ENABLE VALIDATE);
DROP INDEX SYSTEM.AQ$_QUEUES_CHECK;

CREATE UNIQUE INDEX SYSTEM.AQ$_QUEUES_CHECK ON SYSTEM.AQ$_QUEUES
(NAME, TABLE_OBJNO)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.AQ$_QUEUES_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.AQ$_QUEUES_PRIMARY ON SYSTEM.AQ$_QUEUES
(OID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.AQ$_QUEUE_TABLES_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.AQ$_QUEUE_TABLES_PRIMARY ON SYSTEM.AQ$_QUEUE_TABLES
(OBJNO)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.AQ$_SCHEDULES_CHECK;

CREATE UNIQUE INDEX SYSTEM.AQ$_SCHEDULES_CHECK ON SYSTEM.AQ$_SCHEDULES
(JOBNO)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.AQ$_SCHEDULES_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.AQ$_SCHEDULES_PRIMARY ON SYSTEM.AQ$_SCHEDULES
(OID, DESTINATION)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_CALLDEST_N2;

CREATE INDEX SYSTEM.DEF$_CALLDEST_N2 ON SYSTEM.DEF$_CALLDEST
(DBLINK, CATCHUP)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_CALLDEST_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.DEF$_CALLDEST_PRIMARY ON SYSTEM.DEF$_CALLDEST
(ENQ_TID, DBLINK, STEP_NO)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_DEFAULTDEST_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.DEF$_DEFAULTDEST_PRIMARY ON SYSTEM.DEF$_DEFAULTDEST
(DBLINK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_DESTINATION_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.DEF$_DESTINATION_PRIMARY ON SYSTEM.DEF$_DESTINATION
(DBLINK, CATCHUP)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_ERROR_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.DEF$_ERROR_PRIMARY ON SYSTEM.DEF$_ERROR
(ENQ_TID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_LOB_N1;

CREATE INDEX SYSTEM.DEF$_LOB_N1 ON SYSTEM.DEF$_LOB
(ENQ_TID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_LOB_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.DEF$_LOB_PRIMARY ON SYSTEM.DEF$_LOB
(ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_PROPAGATOR_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.DEF$_PROPAGATOR_PRIMARY ON SYSTEM.DEF$_PROPAGATOR
(USERID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_PUSHED_TRAN_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.DEF$_PUSHED_TRAN_PRIMARY ON SYSTEM.DEF$_PUSHED_TRANSACTIONS
(SOURCE_SITE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.DEF$_TRANORDER;

CREATE INDEX SYSTEM.DEF$_TRANORDER ON SYSTEM.DEF$_AQCALL
(CSCN, ENQ_TID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.HELP_TOPIC_SEQ;

CREATE UNIQUE INDEX SYSTEM.HELP_TOPIC_SEQ ON SYSTEM.HELP
(TOPIC, SEQ)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          16K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.I1_QUEUES;

CREATE INDEX SYSTEM.I1_QUEUES ON SYSTEM.AQ$_QUEUES
(NAME, EVENTID, TABLE_OBJNO)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.I1_QUEUE_TABLES;

CREATE INDEX SYSTEM.I1_QUEUE_TABLES ON SYSTEM.AQ$_QUEUE_TABLES
(OBJNO, "SCHEMA", FLAGS)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.I_REPCAT$_SNAPGROUP1;

CREATE UNIQUE INDEX SYSTEM.I_REPCAT$_SNAPGROUP1 ON SYSTEM.REPCAT$_SNAPGROUP
(GNAME, DBLINK, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNRC_CONCOL_GG_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_CONCOL_GG_PK ON SYSTEM.LOGMNRC_CONCOL_GG
(LOGMNR_UID, CON#, COMMIT_SCN, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_CON_GG_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_CON_GG_PK ON SYSTEM.LOGMNRC_CON_GG
(LOGMNR_UID, CON#, COMMIT_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_DBNAME_UID_MAP_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_DBNAME_UID_MAP_PK ON SYSTEM.LOGMNRC_DBNAME_UID_MAP
(GLOBAL_NAME, LOGMNR_MDH)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNRC_GSBA_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_GSBA_PK ON SYSTEM.LOGMNRC_GSBA
(LOGMNR_UID, AS_OF_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_GSII_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_GSII_PK ON SYSTEM.LOGMNRC_GSII
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_GTCS_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_GTCS_PK ON SYSTEM.LOGMNRC_GTCS
(LOGMNR_UID, OBJ#, OBJV#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_GTLO_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_GTLO_PK ON SYSTEM.LOGMNRC_GTLO
(LOGMNR_UID, KEYOBJ#, BASEOBJV#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I1CONGG;

CREATE INDEX SYSTEM.LOGMNRC_I1CONGG ON SYSTEM.LOGMNRC_CON_GG
(LOGMNR_UID, BASEOBJ#, BASEOBJV#, COMMIT_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I1INDGG;

CREATE INDEX SYSTEM.LOGMNRC_I1INDGG ON SYSTEM.LOGMNRC_IND_GG
(LOGMNR_UID, BASEOBJ#, BASEOBJV#, COMMIT_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I2CONGG;

CREATE INDEX SYSTEM.LOGMNRC_I2CONGG ON SYSTEM.LOGMNRC_CON_GG
(LOGMNR_UID, DROP_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I2GTCS;

CREATE INDEX SYSTEM.LOGMNRC_I2GTCS ON SYSTEM.LOGMNRC_GTCS
(LOGMNR_UID, OBJ#, OBJV#, SEGCOL#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I2GTLO;

CREATE INDEX SYSTEM.LOGMNRC_I2GTLO ON SYSTEM.LOGMNRC_GTLO
(LOGMNR_UID, BASEOBJ#, BASEOBJV#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I2INDGG;

CREATE INDEX SYSTEM.LOGMNRC_I2INDGG ON SYSTEM.LOGMNRC_IND_GG
(LOGMNR_UID, DROP_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I2SEQGG;

CREATE INDEX SYSTEM.LOGMNRC_I2SEQGG ON SYSTEM.LOGMNRC_SEQ_GG
(LOGMNR_UID, DROP_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_I3GTLO;

CREATE INDEX SYSTEM.LOGMNRC_I3GTLO ON SYSTEM.LOGMNRC_GTLO
(LOGMNR_UID, DROP_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_INDCOL_GG_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_INDCOL_GG_PK ON SYSTEM.LOGMNRC_INDCOL_GG
(LOGMNR_UID, OBJ#, COMMIT_SCN, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_IND_GG_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_IND_GG_PK ON SYSTEM.LOGMNRC_IND_GG
(LOGMNR_UID, OBJ#, COMMIT_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRC_SEQ_GG_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRC_SEQ_GG_PK ON SYSTEM.LOGMNRC_SEQ_GG
(LOGMNR_UID, OBJ#, COMMIT_SCN)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRGGC_GTCS_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRGGC_GTCS_PK ON SYSTEM.LOGMNRGGC_GTCS
(LOGMNR_UID, OBJ#, OBJV#, INTCOL#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNRGGC_GTLO_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRGGC_GTLO_PK ON SYSTEM.LOGMNRGGC_GTLO
(LOGMNR_UID, KEYOBJ#, BASEOBJV#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNRGGC_I2GTCS;

CREATE INDEX SYSTEM.LOGMNRGGC_I2GTCS ON SYSTEM.LOGMNRGGC_GTCS
(LOGMNR_UID, OBJ#, OBJV#, SEGCOL#, INTCOL#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNRGGC_I2GTLO;

CREATE INDEX SYSTEM.LOGMNRGGC_I2GTLO ON SYSTEM.LOGMNRGGC_GTLO
(LOGMNR_UID, BASEOBJ#, BASEOBJV#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNRGGC_I3GTLO;

CREATE INDEX SYSTEM.LOGMNRGGC_I3GTLO ON SYSTEM.LOGMNRGGC_GTLO
(LOGMNR_UID, DROP_SCN)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNRP_CTAS_PART_MAP_I;

CREATE INDEX SYSTEM.LOGMNRP_CTAS_PART_MAP_I ON SYSTEM.LOGMNRP_CTAS_PART_MAP
(LOGMNR_UID, BASEOBJ#, BASEOBJV#, PART#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRP_CTAS_PART_MAP_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRP_CTAS_PART_MAP_PK ON SYSTEM.LOGMNRP_CTAS_PART_MAP
(LOGMNR_UID, BASEOBJV#, KEYOBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNRT_MDDL$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNRT_MDDL$_PK ON SYSTEM.LOGMNRT_MDDL$
(SOURCE_OBJ#, SOURCE_ROWID);

DROP INDEX SYSTEM.LOGMNR_AGE_SPILL$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_AGE_SPILL$_PK ON SYSTEM.LOGMNR_AGE_SPILL$
(SESSION#, XIDUSN, XIDSLT, XIDSQN, CHUNK, 
SEQUENCE#)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_DID$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_DID$_PK ON SYSTEM.LOGMNR_DID$
(SESSION#)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_I1ATTRCOL$;

CREATE INDEX SYSTEM.LOGMNR_I1ATTRCOL$ ON SYSTEM.LOGMNR_ATTRCOL$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1ATTRIBUTE$;

CREATE INDEX SYSTEM.LOGMNR_I1ATTRIBUTE$ ON SYSTEM.LOGMNR_ATTRIBUTE$
(LOGMNR_UID, TOID, VERSION#, ATTRIBUTE#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1CCOL$;

CREATE INDEX SYSTEM.LOGMNR_I1CCOL$ ON SYSTEM.LOGMNR_CCOL$
(LOGMNR_UID, CON#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1CDEF$;

CREATE INDEX SYSTEM.LOGMNR_I1CDEF$ ON SYSTEM.LOGMNR_CDEF$
(LOGMNR_UID, CON#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1COL$;

CREATE INDEX SYSTEM.LOGMNR_I1COL$ ON SYSTEM.LOGMNR_COL$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1COLTYPE$;

CREATE INDEX SYSTEM.LOGMNR_I1COLTYPE$ ON SYSTEM.LOGMNR_COLTYPE$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1CON$;

CREATE INDEX SYSTEM.LOGMNR_I1CON$ ON SYSTEM.LOGMNR_CON$
(LOGMNR_UID, CON#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1CONTAINER$;

CREATE INDEX SYSTEM.LOGMNR_I1CONTAINER$ ON SYSTEM.LOGMNR_CONTAINER$
(LOGMNR_UID, CON_ID#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1DICTIONARY$;

CREATE INDEX SYSTEM.LOGMNR_I1DICTIONARY$ ON SYSTEM.LOGMNR_DICTIONARY$
(LOGMNR_UID)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1ENC$;

CREATE INDEX SYSTEM.LOGMNR_I1ENC$ ON SYSTEM.LOGMNR_ENC$
(LOGMNR_UID, OBJ#, OWNER#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1ICOL$;

CREATE INDEX SYSTEM.LOGMNR_I1ICOL$ ON SYSTEM.LOGMNR_ICOL$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1IND$;

CREATE INDEX SYSTEM.LOGMNR_I1IND$ ON SYSTEM.LOGMNR_IND$
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1INDCOMPART$;

CREATE INDEX SYSTEM.LOGMNR_I1INDCOMPART$ ON SYSTEM.LOGMNR_INDCOMPART$
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1INDPART$;

CREATE INDEX SYSTEM.LOGMNR_I1INDPART$ ON SYSTEM.LOGMNR_INDPART$
(LOGMNR_UID, OBJ#, BO#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1INDSUBPART$;

CREATE INDEX SYSTEM.LOGMNR_I1INDSUBPART$ ON SYSTEM.LOGMNR_INDSUBPART$
(LOGMNR_UID, OBJ#, POBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1KOPM$;

CREATE INDEX SYSTEM.LOGMNR_I1KOPM$ ON SYSTEM.LOGMNR_KOPM$
(LOGMNR_UID, NAME)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1LOB$;

CREATE INDEX SYSTEM.LOGMNR_I1LOB$ ON SYSTEM.LOGMNR_LOB$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1LOBFRAG$;

CREATE INDEX SYSTEM.LOGMNR_I1LOBFRAG$ ON SYSTEM.LOGMNR_LOBFRAG$
(LOGMNR_UID, FRAGOBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1LOGMNR_BUILDLOG;

CREATE INDEX SYSTEM.LOGMNR_I1LOGMNR_BUILDLOG ON SYSTEM.LOGMNR_LOGMNR_BUILDLOG
(LOGMNR_UID, INITIAL_XID)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1NTAB$;

CREATE INDEX SYSTEM.LOGMNR_I1NTAB$ ON SYSTEM.LOGMNR_NTAB$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1OBJ$;

CREATE INDEX SYSTEM.LOGMNR_I1OBJ$ ON SYSTEM.LOGMNR_OBJ$
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1OPQTYPE$;

CREATE INDEX SYSTEM.LOGMNR_I1OPQTYPE$ ON SYSTEM.LOGMNR_OPQTYPE$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1PARTOBJ$;

CREATE INDEX SYSTEM.LOGMNR_I1PARTOBJ$ ON SYSTEM.LOGMNR_PARTOBJ$
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1PROPS$;

CREATE INDEX SYSTEM.LOGMNR_I1PROPS$ ON SYSTEM.LOGMNR_PROPS$
(LOGMNR_UID, NAME)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1REFCON$;

CREATE INDEX SYSTEM.LOGMNR_I1REFCON$ ON SYSTEM.LOGMNR_REFCON$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1SEED$;

CREATE INDEX SYSTEM.LOGMNR_I1SEED$ ON SYSTEM.LOGMNR_SEED$
(LOGMNR_UID, OBJ#, INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1SUBCOLTYPE$;

CREATE INDEX SYSTEM.LOGMNR_I1SUBCOLTYPE$ ON SYSTEM.LOGMNR_SUBCOLTYPE$
(LOGMNR_UID, OBJ#, INTCOL#, TOID)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1TAB$;

CREATE INDEX SYSTEM.LOGMNR_I1TAB$ ON SYSTEM.LOGMNR_TAB$
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1TABCOMPART$;

CREATE INDEX SYSTEM.LOGMNR_I1TABCOMPART$ ON SYSTEM.LOGMNR_TABCOMPART$
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1TABPART$;

CREATE INDEX SYSTEM.LOGMNR_I1TABPART$ ON SYSTEM.LOGMNR_TABPART$
(LOGMNR_UID, OBJ#, BO#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1TABSUBPART$;

CREATE INDEX SYSTEM.LOGMNR_I1TABSUBPART$ ON SYSTEM.LOGMNR_TABSUBPART$
(LOGMNR_UID, OBJ#, POBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1TS$;

CREATE INDEX SYSTEM.LOGMNR_I1TS$ ON SYSTEM.LOGMNR_TS$
(LOGMNR_UID, TS#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1TYPE$;

CREATE INDEX SYSTEM.LOGMNR_I1TYPE$ ON SYSTEM.LOGMNR_TYPE$
(LOGMNR_UID, TOID, VERSION#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I1USER$;

CREATE INDEX SYSTEM.LOGMNR_I1USER$ ON SYSTEM.LOGMNR_USER$
(LOGMNR_UID, USER#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2CDEF$;

CREATE INDEX SYSTEM.LOGMNR_I2CDEF$ ON SYSTEM.LOGMNR_CDEF$
(LOGMNR_UID, ROBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2COL$;

CREATE INDEX SYSTEM.LOGMNR_I2COL$ ON SYSTEM.LOGMNR_COL$
(LOGMNR_UID, OBJ#, NAME)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2IND$;

CREATE INDEX SYSTEM.LOGMNR_I2IND$ ON SYSTEM.LOGMNR_IND$
(LOGMNR_UID, BO#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2INDPART$;

CREATE INDEX SYSTEM.LOGMNR_I2INDPART$ ON SYSTEM.LOGMNR_INDPART$
(LOGMNR_UID, BO#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2NTAB$;

CREATE INDEX SYSTEM.LOGMNR_I2NTAB$ ON SYSTEM.LOGMNR_NTAB$
(LOGMNR_UID, NTAB#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2OBJ$;

CREATE INDEX SYSTEM.LOGMNR_I2OBJ$ ON SYSTEM.LOGMNR_OBJ$
(LOGMNR_UID, OID$)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2SEED$;

CREATE INDEX SYSTEM.LOGMNR_I2SEED$ ON SYSTEM.LOGMNR_SEED$
(LOGMNR_UID, SCHEMANAME, TABLE_NAME, COL_NAME, OBJ#, 
INTCOL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2TAB$;

CREATE INDEX SYSTEM.LOGMNR_I2TAB$ ON SYSTEM.LOGMNR_TAB$
(LOGMNR_UID, BOBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2TABCOMPART$;

CREATE INDEX SYSTEM.LOGMNR_I2TABCOMPART$ ON SYSTEM.LOGMNR_TABCOMPART$
(LOGMNR_UID, BO#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2TABPART$;

CREATE INDEX SYSTEM.LOGMNR_I2TABPART$ ON SYSTEM.LOGMNR_TABPART$
(LOGMNR_UID, BO#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2TABSUBPART$;

CREATE INDEX SYSTEM.LOGMNR_I2TABSUBPART$ ON SYSTEM.LOGMNR_TABSUBPART$
(LOGMNR_UID, POBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I2USER$;

CREATE INDEX SYSTEM.LOGMNR_I2USER$ ON SYSTEM.LOGMNR_USER$
(LOGMNR_UID, NAME)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I3CDEF$;

CREATE INDEX SYSTEM.LOGMNR_I3CDEF$ ON SYSTEM.LOGMNR_CDEF$
(LOGMNR_UID, OBJ#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I3COL$;

CREATE INDEX SYSTEM.LOGMNR_I3COL$ ON SYSTEM.LOGMNR_COL$
(LOGMNR_UID, OBJ#, COL#)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_I3OBJ$;

CREATE INDEX SYSTEM.LOGMNR_I3OBJ$ ON SYSTEM.LOGMNR_OBJ$
(LOGMNR_UID, NAME)
  TABLESPACE SYSAUX
  PCTFREE    10
  INITRANS   2
  MAXTRANS   255
  STORAGE    (
              BUFFER_POOL      DEFAULT
             )
LOGGING
LOCAL (  
  PARTITION P_LESSTHAN100
    LOGGING
    NOCOMPRESS 
    TABLESPACE SYSAUX
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                MAXSIZE          UNLIMITED
                BUFFER_POOL      DEFAULT
               )
);

DROP INDEX SYSTEM.LOGMNR_INTEG_SPILL$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_INTEG_SPILL$_PK ON SYSTEM.LOGMNR_INTEGRATED_SPILL$
(SESSION#, XIDUSN, XIDSLT, XIDSQN, CHUNK, 
FLAG)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_LOG$_FIRST_CHANGE#;

CREATE INDEX SYSTEM.LOGMNR_LOG$_FIRST_CHANGE# ON SYSTEM.LOGMNR_LOG$
(FIRST_CHANGE#)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_LOG$_FLAGS;

CREATE INDEX SYSTEM.LOGMNR_LOG$_FLAGS ON SYSTEM.LOGMNR_LOG$
(FLAGS)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_LOG$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_LOG$_PK ON SYSTEM.LOGMNR_LOG$
(SESSION#, THREAD#, SEQUENCE#, FIRST_CHANGE#, DB_ID, 
RESETLOGS_CHANGE#, RESET_TIMESTAMP)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_LOG$_RECID;

CREATE INDEX SYSTEM.LOGMNR_LOG$_RECID ON SYSTEM.LOGMNR_LOG$
(RECID)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_PARAMETER_INDX;

CREATE INDEX SYSTEM.LOGMNR_PARAMETER_INDX ON SYSTEM.LOGMNR_PARAMETER$
(SESSION#, NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_PDB_INFO$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_PDB_INFO$_PK ON SYSTEM.LOGMNR_PDB_INFO$
(LOGMNR_DID, LOGMNR_MDH, PLUGIN_SCN)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_PROCESSED_LOG$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_PROCESSED_LOG$_PK ON SYSTEM.LOGMNR_PROCESSED_LOG$
(SESSION#, THREAD#)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_RESTART_CKPT$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_RESTART_CKPT$_PK ON SYSTEM.LOGMNR_RESTART_CKPT$
(SESSION#, CKPT_SCN, XIDUSN, XIDSLT, XIDSQN, 
SESSION_NUM, SERIAL_NUM)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_RESTART_CKPT_TXINFO$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_RESTART_CKPT_TXINFO$_PK ON SYSTEM.LOGMNR_RESTART_CKPT_TXINFO$
(SESSION#, XIDUSN, XIDSLT, XIDSQN, SESSION_NUM, 
SERIAL_NUM, EFFECTIVE_SCN)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_SESSION_ACTION$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_SESSION_ACTION$_PK ON SYSTEM.LOGMNR_SESSION_ACTIONS$
(LOGMNRSESSION#, ACTIONNAME)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_SESSION_EVOLVE$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_SESSION_EVOLVE$_PK ON SYSTEM.LOGMNR_SESSION_EVOLVE$
(SESSION#, DB_ID, RESET_SCN, RESET_TIMESTAMP)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_SESSION_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_SESSION_PK ON SYSTEM.LOGMNR_SESSION$
(SESSION#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_SESSION_UK1;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_SESSION_UK1 ON SYSTEM.LOGMNR_SESSION$
(SESSION_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_SPILL$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_SPILL$_PK ON SYSTEM.LOGMNR_SPILL$
(SESSION#, XIDUSN, XIDSLT, XIDSQN, CHUNK, 
STARTIDX, ENDIDX, FLAG, SEQUENCE#)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGMNR_UID$_PK;

CREATE UNIQUE INDEX SYSTEM.LOGMNR_UID$_PK ON SYSTEM.LOGMNR_UID$
(LOGMNR_UID)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGSTDBY$EDS_TABLES_PKEY;

CREATE UNIQUE INDEX SYSTEM.LOGSTDBY$EDS_TABLES_PKEY ON SYSTEM.LOGSTDBY$EDS_TABLES
(OWNER, TABLE_NAME)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGSTDBY$EVENTS_IND;

CREATE INDEX SYSTEM.LOGSTDBY$EVENTS_IND ON SYSTEM.LOGSTDBY$EVENTS
(EVENT_TIME)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGSTDBY$EVENTS_IND_SCN;

CREATE INDEX SYSTEM.LOGSTDBY$EVENTS_IND_SCN ON SYSTEM.LOGSTDBY$EVENTS
(COMMIT_SCN)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGSTDBY$EVENTS_IND_XID;

CREATE INDEX SYSTEM.LOGSTDBY$EVENTS_IND_XID ON SYSTEM.LOGSTDBY$EVENTS
(XIDUSN, XIDSLT, XIDSQN)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGSTDBY$SKIP_IDX1;

CREATE INDEX SYSTEM.LOGSTDBY$SKIP_IDX1 ON SYSTEM.LOGSTDBY$SKIP
(USE_LIKE, "SCHEMA", NAME)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGSTDBY$SKIP_IDX2;

CREATE INDEX SYSTEM.LOGSTDBY$SKIP_IDX2 ON SYSTEM.LOGSTDBY$SKIP
(STATEMENT_OPT)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.LOGSTDBY$SKIP_IND;

CREATE INDEX SYSTEM.LOGSTDBY$SKIP_IND ON SYSTEM.LOGSTDBY$SKIP_SUPPORT
(NAME, ACTION)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_AJG_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_AJG_PK ON SYSTEM.MVIEW$_ADV_AJG
(AJGID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_BASETABLE_IDX_01;

CREATE INDEX SYSTEM.MVIEW$_ADV_BASETABLE_IDX_01 ON SYSTEM.MVIEW$_ADV_BASETABLE
(QUERYID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_CLIQUE_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_CLIQUE_PK ON SYSTEM.MVIEW$_ADV_CLIQUE
(CLIQUEID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_ELIGIBLE_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_ELIGIBLE_PK ON SYSTEM.MVIEW$_ADV_ELIGIBLE
(SUMOBJN#, RUNID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_FILTER_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_FILTER_PK ON SYSTEM.MVIEW$_ADV_FILTER
(FILTERID#, SUBFILTERNUM#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_FJG_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_FJG_PK ON SYSTEM.MVIEW$_ADV_FJG
(FJGID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_GC_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_GC_PK ON SYSTEM.MVIEW$_ADV_GC
(GCID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_INFO_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_INFO_PK ON SYSTEM.MVIEW$_ADV_INFO
(RUNID#, SEQ#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_JOURNAL_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_JOURNAL_PK ON SYSTEM.MVIEW$_ADV_JOURNAL
(RUNID#, SEQ#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_LEVEL_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_LEVEL_PK ON SYSTEM.MVIEW$_ADV_LEVEL
(RUNID#, LEVELID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_LOG_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_LOG_PK ON SYSTEM.MVIEW$_ADV_LOG
(RUNID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_OUTPUT_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_OUTPUT_PK ON SYSTEM.MVIEW$_ADV_OUTPUT
(RUNID#, RANK#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_PARAMETERS_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_PARAMETERS_PK ON SYSTEM.MVIEW$_ADV_PARAMETERS
(PARAMETER_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_PRETTY_IDX_01;

CREATE INDEX SYSTEM.MVIEW$_ADV_PRETTY_IDX_01 ON SYSTEM.MVIEW$_ADV_PRETTY
(QUERYID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_ROLLUP_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_ROLLUP_PK ON SYSTEM.MVIEW$_ADV_ROLLUP
(RUNID#, CLEVELID#, PLEVELID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_SQLDEPEND_IDX_01;

CREATE INDEX SYSTEM.MVIEW$_ADV_SQLDEPEND_IDX_01 ON SYSTEM.MVIEW$_ADV_SQLDEPEND
(COLLECTIONID#, FROM_ADDRESS, FROM_HASH, INST_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_TEMP_IDX_01;

CREATE INDEX SYSTEM.MVIEW$_ADV_TEMP_IDX_01 ON SYSTEM.MVIEW$_ADV_TEMP
(ID#, SEQ#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_WORKLOAD_IDX_01;

CREATE INDEX SYSTEM.MVIEW$_ADV_WORKLOAD_IDX_01 ON SYSTEM.MVIEW$_ADV_WORKLOAD
(COLLECTIONID#, QUERYID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.MVIEW$_ADV_WORKLOAD_PK;

CREATE UNIQUE INDEX SYSTEM.MVIEW$_ADV_WORKLOAD_PK ON SYSTEM.MVIEW$_ADV_WORKLOAD
(QUERYID#)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.OL$HNT_NUM;

CREATE UNIQUE INDEX SYSTEM.OL$HNT_NUM ON SYSTEM.OL$HINTS
(OL_NAME, HINT#);

DROP INDEX SYSTEM.OL$NAME;

CREATE UNIQUE INDEX SYSTEM.OL$NAME ON SYSTEM.OL$
(OL_NAME);

DROP INDEX SYSTEM.OL$SIGNATURE;

CREATE UNIQUE INDEX SYSTEM.OL$SIGNATURE ON SYSTEM.OL$
(SIGNATURE, CATEGORY);

DROP INDEX SYSTEM.REDO_DB_IDX;

CREATE INDEX SYSTEM.REDO_DB_IDX ON SYSTEM.REDO_DB
(DBID, THREAD#, RESETLOGS_SCN, RESETLOGS_TIME)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REDO_LOG_IDX;

CREATE INDEX SYSTEM.REDO_LOG_IDX ON SYSTEM.REDO_LOG
(DBID, THREAD#, RESETLOGS_SCN, RESETLOGS_TIME)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REDO_RTA_IDX;

CREATE UNIQUE INDEX SYSTEM.REDO_RTA_IDX ON SYSTEM.REDO_RTA
(DBID, THREAD)
LOGGING
TABLESPACE SYSAUX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_AUDIT_ATTRIBUTE_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_AUDIT_ATTRIBUTE_PK ON SYSTEM.REPCAT$_AUDIT_ATTRIBUTE
(ATTRIBUTE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_AUDIT_COLUMN_F1_IDX;

CREATE INDEX SYSTEM.REPCAT$_AUDIT_COLUMN_F1_IDX ON SYSTEM.REPCAT$_AUDIT_COLUMN
(ATTRIBUTE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_AUDIT_COLUMN_F2_IDX;

CREATE INDEX SYSTEM.REPCAT$_AUDIT_COLUMN_F2_IDX ON SYSTEM.REPCAT$_AUDIT_COLUMN
(BASE_SNAME, BASE_ONAME, BASE_CONFLICT_TYPE_ID, BASE_REFERENCE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_AUDIT_COLUMN_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_AUDIT_COLUMN_PK ON SYSTEM.REPCAT$_AUDIT_COLUMN
(COLUMN_NAME, ONAME, SNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_COLUMN_GROUP_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_COLUMN_GROUP_PK ON SYSTEM.REPCAT$_COLUMN_GROUP
(SNAME, ONAME, GROUP_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_CONFLICT_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_CONFLICT_PK ON SYSTEM.REPCAT$_CONFLICT
(SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_DDL;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_DDL ON SYSTEM.REPCAT$_DDL
(LOG_ID, SOURCE, ROLE, MASTER, LINE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_DDL_INDEX;

CREATE INDEX SYSTEM.REPCAT$_DDL_INDEX ON SYSTEM.REPCAT$_DDL
(LOG_ID, SOURCE, ROLE, MASTER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_EXCEPTIONS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_EXCEPTIONS_PK ON SYSTEM.REPCAT$_EXCEPTIONS
(EXCEPTION_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVORS_FK1_IDX;

CREATE INDEX SYSTEM.REPCAT$_FLAVORS_FK1_IDX ON SYSTEM.REPCAT$_FLAVORS
(GNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVORS_FNAME;

CREATE INDEX SYSTEM.REPCAT$_FLAVORS_FNAME ON SYSTEM.REPCAT$_FLAVORS
(FNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVORS_GNAME;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_FLAVORS_GNAME ON SYSTEM.REPCAT$_FLAVORS
(GNAME, FNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVORS_UNQ1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_FLAVORS_UNQ1 ON SYSTEM.REPCAT$_FLAVORS
(GNAME, FLAVOR_ID, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_FG;

CREATE INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_FG ON SYSTEM.REPCAT$_FLAVOR_OBJECTS
(FLAVOR_ID, GNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_FK1_IDX;

CREATE INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_FK1_IDX ON SYSTEM.REPCAT$_FLAVOR_OBJECTS
(GNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_FK2_IDX;

CREATE INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_FK2_IDX ON SYSTEM.REPCAT$_FLAVOR_OBJECTS
(GNAME, FLAVOR_ID, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_FLAVOR_OBJECTS_PK ON SYSTEM.REPCAT$_FLAVOR_OBJECTS
(SNAME, ONAME, TYPE, GNAME, FLAVOR_ID, 
GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_GENERATED_N1;

CREATE INDEX SYSTEM.REPCAT$_GENERATED_N1 ON SYSTEM.REPCAT$_GENERATED
(BASE_SNAME, BASE_ONAME, BASE_TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_GROUPED_COLUMN_F1_IDX;

CREATE INDEX SYSTEM.REPCAT$_GROUPED_COLUMN_F1_IDX ON SYSTEM.REPCAT$_GROUPED_COLUMN
(SNAME, ONAME, GROUP_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_GROUPED_COLUMN_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_GROUPED_COLUMN_PK ON SYSTEM.REPCAT$_GROUPED_COLUMN
(SNAME, ONAME, GROUP_NAME, COLUMN_NAME, POS)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_INSTANTIATION_DDL_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_INSTANTIATION_DDL_PK ON SYSTEM.REPCAT$_INSTANTIATION_DDL
(REFRESH_TEMPLATE_ID, PHASE, DDL_NUM)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_KEY_COLUMNS_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_KEY_COLUMNS_PRIMARY ON SYSTEM.REPCAT$_KEY_COLUMNS
(SNAME, ONAME, COL)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_KEY_COLUMNS_PRNT_IDX;

CREATE INDEX SYSTEM.REPCAT$_KEY_COLUMNS_PRNT_IDX ON SYSTEM.REPCAT$_KEY_COLUMNS
(SNAME, ONAME, TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_OBJECT_PARMS_N2;

CREATE INDEX SYSTEM.REPCAT$_OBJECT_PARMS_N2 ON SYSTEM.REPCAT$_OBJECT_PARMS
(TEMPLATE_OBJECT_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_OBJECT_PARMS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_OBJECT_PARMS_PK ON SYSTEM.REPCAT$_OBJECT_PARMS
(TEMPLATE_PARAMETER_ID, TEMPLATE_OBJECT_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_OBJECT_TYPE_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_OBJECT_TYPE_PK ON SYSTEM.REPCAT$_OBJECT_TYPES
(OBJECT_TYPE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_PARAMETER_COLUMN_F1_I;

CREATE INDEX SYSTEM.REPCAT$_PARAMETER_COLUMN_F1_I ON SYSTEM.REPCAT$_PARAMETER_COLUMN
(SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME, SEQUENCE_NO)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_PARAMETER_COLUMN_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_PARAMETER_COLUMN_PK ON SYSTEM.REPCAT$_PARAMETER_COLUMN
(SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME, SEQUENCE_NO, 
PARAMETER_TABLE_NAME, PARAMETER_SEQUENCE_NO, COLUMN_POS)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_PRIORITY_F1_IDX;

CREATE INDEX SYSTEM.REPCAT$_PRIORITY_F1_IDX ON SYSTEM.REPCAT$_PRIORITY
(PRIORITY_GROUP, SNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_PRIORITY_GROUP_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_PRIORITY_GROUP_PK ON SYSTEM.REPCAT$_PRIORITY_GROUP
(PRIORITY_GROUP, SNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_PRIORITY_GROUP_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_PRIORITY_GROUP_U1 ON SYSTEM.REPCAT$_PRIORITY_GROUP
(SNAME, PRIORITY_GROUP, DATA_TYPE_ID, FIXED_DATA_LENGTH)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_PRIORITY_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_PRIORITY_PK ON SYSTEM.REPCAT$_PRIORITY
(SNAME, PRIORITY_GROUP, PRIORITY)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REFRESH_TEMPLATES_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REFRESH_TEMPLATES_PK ON SYSTEM.REPCAT$_REFRESH_TEMPLATES
(REFRESH_TEMPLATE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REFRESH_TEMPLATES_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REFRESH_TEMPLATES_U1 ON SYSTEM.REPCAT$_REFRESH_TEMPLATES
(REFRESH_TEMPLATE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPCATLOG_GNAME;

CREATE INDEX SYSTEM.REPCAT$_REPCATLOG_GNAME ON SYSTEM.REPCAT$_REPCATLOG
(GNAME, SNAME, ONAME, TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPCATLOG_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPCATLOG_PRIMARY ON SYSTEM.REPCAT$_REPCATLOG
(ID, SOURCE, ROLE, MASTER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPCAT_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPCAT_PRIMARY ON SYSTEM.REPCAT$_REPCAT
(SNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPCOLUMN_FK_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPCOLUMN_FK_IDX ON SYSTEM.REPCAT$_REPCOLUMN
(SNAME, ONAME, TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPCOLUMN_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPCOLUMN_PK ON SYSTEM.REPCAT$_REPCOLUMN
(SNAME, ONAME, TYPE, CNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPGEN_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPGEN_PRIMARY ON SYSTEM.REPCAT$_GENERATED
(SNAME, ONAME, TYPE, BASE_SNAME, BASE_ONAME, 
BASE_TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPGEN_PRNT_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPGEN_PRNT_IDX ON SYSTEM.REPCAT$_GENERATED
(SNAME, ONAME, TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPGROUP_PRIVS_FK_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPGROUP_PRIVS_FK_IDX ON SYSTEM.REPCAT$_REPGROUP_PRIVS
(GNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPGROUP_PRIVS_N1;

CREATE INDEX SYSTEM.REPCAT$_REPGROUP_PRIVS_N1 ON SYSTEM.REPCAT$_REPGROUP_PRIVS
(GLOBAL_FLAG, USERNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPGROUP_PRIVS_UK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPGROUP_PRIVS_UK ON SYSTEM.REPCAT$_REPGROUP_PRIVS
(USERNAME, GNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPOBJECT_GNAME;

CREATE INDEX SYSTEM.REPCAT$_REPOBJECT_GNAME ON SYSTEM.REPCAT$_REPOBJECT
(GNAME, ONAME, TYPE, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPOBJECT_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPOBJECT_PRIMARY ON SYSTEM.REPCAT$_REPOBJECT
(SNAME, ONAME, TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPOBJECT_PRNT_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPOBJECT_PRNT_IDX ON SYSTEM.REPCAT$_REPOBJECT
(GNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPPROP_DBLINK_HOW;

CREATE INDEX SYSTEM.REPCAT$_REPPROP_DBLINK_HOW ON SYSTEM.REPCAT$_REPPROP
(DBLINK, HOW, EXTENSION_ID, RECIPIENT_KEY)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPPROP_KEY_INDEX;

CREATE INDEX SYSTEM.REPCAT$_REPPROP_KEY_INDEX ON SYSTEM.REPCAT$_REPPROP
(RECIPIENT_KEY)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPPROP_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPPROP_PRIMARY ON SYSTEM.REPCAT$_REPPROP
(SNAME, ONAME, TYPE, DBLINK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPPROP_PRNT2_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPPROP_PRNT2_IDX ON SYSTEM.REPCAT$_REPPROP
(SNAME, DBLINK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPPROP_PRNT_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPPROP_PRNT_IDX ON SYSTEM.REPCAT$_REPPROP
(SNAME, ONAME, TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPSCHEMA_DEST_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPSCHEMA_DEST_IDX ON SYSTEM.REPCAT$_REPSCHEMA
(DBLINK, EXTENSION_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPSCHEMA_PRIMARY;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_REPSCHEMA_PRIMARY ON SYSTEM.REPCAT$_REPSCHEMA
(SNAME, DBLINK, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_REPSCHEMA_PRNT_IDX;

CREATE INDEX SYSTEM.REPCAT$_REPSCHEMA_PRNT_IDX ON SYSTEM.REPCAT$_REPSCHEMA
(SNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_RESOLUTION_F3_IDX;

CREATE INDEX SYSTEM.REPCAT$_RESOLUTION_F3_IDX ON SYSTEM.REPCAT$_RESOLUTION
(CONFLICT_TYPE_ID, METHOD_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_RESOLUTION_IDX2;

CREATE INDEX SYSTEM.REPCAT$_RESOLUTION_IDX2 ON SYSTEM.REPCAT$_RESOLUTION
(SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_RESOLUTION_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_RESOLUTION_PK ON SYSTEM.REPCAT$_RESOLUTION
(SNAME, ONAME, CONFLICT_TYPE_ID, REFERENCE_NAME, SEQUENCE_NO)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_RESOLUTION_STATS_N1;

CREATE INDEX SYSTEM.REPCAT$_RESOLUTION_STATS_N1 ON SYSTEM.REPCAT$_RESOLUTION_STATISTICS
(SNAME, ONAME, RESOLVED_DATE, CONFLICT_TYPE_ID, REFERENCE_NAME, 
METHOD_NAME, FUNCTION_NAME, PRIORITY_GROUP)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_RESOL_METHOD_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_RESOL_METHOD_PK ON SYSTEM.REPCAT$_RESOLUTION_METHOD
(CONFLICT_TYPE_ID, METHOD_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_RESOL_STATS_CTRL_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_RESOL_STATS_CTRL_PK ON SYSTEM.REPCAT$_RESOL_STATS_CONTROL
(SNAME, ONAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_RUNTIME_PARMS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_RUNTIME_PARMS_PK ON SYSTEM.REPCAT$_RUNTIME_PARMS
(RUNTIME_PARM_ID, PARAMETER_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_SITES_NEW_FK1_IDX;

CREATE INDEX SYSTEM.REPCAT$_SITES_NEW_FK1_IDX ON SYSTEM.REPCAT$_SITES_NEW
(EXTENSION_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_SITES_NEW_FK2_IDX;

CREATE INDEX SYSTEM.REPCAT$_SITES_NEW_FK2_IDX ON SYSTEM.REPCAT$_SITES_NEW
(GNAME, GOWNER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_SITES_NEW_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_SITES_NEW_PK ON SYSTEM.REPCAT$_SITES_NEW
(EXTENSION_ID, GOWNER, GNAME, DBLINK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_SITE_OBJECTS_N1;

CREATE INDEX SYSTEM.REPCAT$_SITE_OBJECTS_N1 ON SYSTEM.REPCAT$_SITE_OBJECTS
(TEMPLATE_SITE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_SITE_OBJECTS_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_SITE_OBJECTS_U1 ON SYSTEM.REPCAT$_SITE_OBJECTS
(TEMPLATE_SITE_ID, ONAME, OBJECT_TYPE_ID, SNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_N1;

CREATE INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_N1 ON SYSTEM.REPCAT$_TEMPLATE_OBJECTS
(REFRESH_TEMPLATE_ID, OBJECT_TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_N2;

CREATE INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_N2 ON SYSTEM.REPCAT$_TEMPLATE_OBJECTS
(REFRESH_TEMPLATE_ID, OBJECT_NAME, SCHEMA_NAME, OBJECT_TYPE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_PK ON SYSTEM.REPCAT$_TEMPLATE_OBJECTS
(TEMPLATE_OBJECT_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_OBJECTS_U1 ON SYSTEM.REPCAT$_TEMPLATE_OBJECTS
(OBJECT_NAME, OBJECT_TYPE, REFRESH_TEMPLATE_ID, SCHEMA_NAME, DDL_NUM)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_PARMS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_PARMS_PK ON SYSTEM.REPCAT$_TEMPLATE_PARMS
(TEMPLATE_PARAMETER_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_PARMS_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_PARMS_U1 ON SYSTEM.REPCAT$_TEMPLATE_PARMS
(REFRESH_TEMPLATE_ID, PARAMETER_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_REFGROUPS_N1;

CREATE INDEX SYSTEM.REPCAT$_TEMPLATE_REFGROUPS_N1 ON SYSTEM.REPCAT$_TEMPLATE_REFGROUPS
(REFRESH_GROUP_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_REFGROUPS_N2;

CREATE INDEX SYSTEM.REPCAT$_TEMPLATE_REFGROUPS_N2 ON SYSTEM.REPCAT$_TEMPLATE_REFGROUPS
(REFRESH_TEMPLATE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_REFGROUPS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_REFGROUPS_PK ON SYSTEM.REPCAT$_TEMPLATE_REFGROUPS
(REFRESH_GROUP_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_SITES_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_SITES_PK ON SYSTEM.REPCAT$_TEMPLATE_SITES
(TEMPLATE_SITE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_SITES_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_SITES_U1 ON SYSTEM.REPCAT$_TEMPLATE_SITES
(REFRESH_TEMPLATE_NAME, USER_NAME, SITE_NAME, REPAPI_SITE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_STATUS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_STATUS_PK ON SYSTEM.REPCAT$_TEMPLATE_STATUS
(TEMPLATE_STATUS_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_TARGETS_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_TARGETS_U1 ON SYSTEM.REPCAT$_TEMPLATE_TARGETS
(TARGET_DATABASE)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_TEMPLATE_TYPES_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_TEMPLATE_TYPES_PK ON SYSTEM.REPCAT$_TEMPLATE_TYPES
(TEMPLATE_TYPE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_USER_AUTHORIZATIONS_N1;

CREATE INDEX SYSTEM.REPCAT$_USER_AUTHORIZATIONS_N1 ON SYSTEM.REPCAT$_USER_AUTHORIZATIONS
(REFRESH_TEMPLATE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_USER_AUTHORIZATIONS_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_USER_AUTHORIZATIONS_PK ON SYSTEM.REPCAT$_USER_AUTHORIZATIONS
(USER_AUTHORIZATION_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_USER_AUTHORIZATIONS_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_USER_AUTHORIZATIONS_U1 ON SYSTEM.REPCAT$_USER_AUTHORIZATIONS
(USER_ID, REFRESH_TEMPLATE_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_USER_PARM_VALUES_PK;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_USER_PARM_VALUES_PK ON SYSTEM.REPCAT$_USER_PARM_VALUES
(USER_PARAMETER_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.REPCAT$_USER_PARM_VALUES_U1;

CREATE UNIQUE INDEX SYSTEM.REPCAT$_USER_PARM_VALUES_U1 ON SYSTEM.REPCAT$_USER_PARM_VALUES
(TEMPLATE_PARAMETER_ID, USER_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

--  There is no statement for index SYSTEM.SYS_C0014536.
--  The object is created when the parent object is created.

DROP INDEX SYSTEM.SYS_C0014795;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014795 ON SYSTEM.T_ABILITY
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014796;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014796 ON SYSTEM.T_ABILITY
(ABILITY_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014797;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014797 ON SYSTEM.T_ABILITY_LEVEL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014798;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014798 ON SYSTEM.T_ABILITY_LEVEL
(LEVEL_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014799;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014799 ON SYSTEM.T_DEPARTMENT
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014800;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014800 ON SYSTEM.T_DEPARTMENT
(DEPARTMENT_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014801;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014801 ON SYSTEM.T_STATE
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014802;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014802 ON SYSTEM.T_STATE
(STATE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014803;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014803 ON SYSTEM.T_UNIT
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014804;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014804 ON SYSTEM.T_UNIT
(UNIT_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014805;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014805 ON SYSTEM.T_ROLE
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014806;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014806 ON SYSTEM.T_ROLE
(ROLE_NAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014807;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014807 ON SYSTEM.T_USER
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014808;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014808 ON SYSTEM.T_USER
(U_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014809;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014809 ON SYSTEM.T_USER
(PHONE_NUMBER)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014810;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014810 ON SYSTEM.T_USER_ABILITY_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014811;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014811 ON SYSTEM.T_EDUCATION
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014812;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014812 ON SYSTEM.T_EDUCATION_ABILITY_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014813;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014813 ON SYSTEM.T_EDUCATION_STATE_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.SYS_C0014814;

CREATE UNIQUE INDEX SYSTEM.SYS_C0014814 ON SYSTEM.T_EDUCATION_USER_REL
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

--  There is no statement for index SYSTEM.SYS_C002098.
--  The object is created when the parent object is created.

--  There is no statement for index SYSTEM.SYS_C003934.
--  The object is created when the parent object is created.

--  There is no statement for index SYSTEM.SYS_C004384.
--  The object is created when the parent object is created.

--  There is no statement for index SYSTEM.SYS_C004729.
--  The object is created when the parent object is created.

--  There is no statement for index SYSTEM.SYS_C004732.
--  The object is created when the parent object is created.

DROP INDEX SYSTEM.TEMPLATE$_TARGETS_PK;

CREATE UNIQUE INDEX SYSTEM.TEMPLATE$_TARGETS_PK ON SYSTEM.REPCAT$_TEMPLATE_TARGETS
(TEMPLATE_TARGET_ID)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            MAXSIZE          UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.T_EDUCATOR_PK;

CREATE UNIQUE INDEX SYSTEM.T_EDUCATOR_PK ON SYSTEM.T_EDUCATOR
(PK)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.T_USER_U03;

CREATE UNIQUE INDEX SYSTEM.T_USER_U03 ON SYSTEM.T_USER
(EMAIL)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );

DROP INDEX SYSTEM.UNQ_PAIRS;

CREATE UNIQUE INDEX SYSTEM.UNQ_PAIRS ON SYSTEM.AQ$_INTERNET_AGENT_PRIVS
(AGENT_NAME, DB_USERNAME)
LOGGING
TABLESPACE SYSTEM
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MAXSIZE          UNLIMITED
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            FREELISTS        1
            FREELIST GROUPS  1
            BUFFER_POOL      DEFAULT
           );
